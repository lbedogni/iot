#!/usr/bin/env python
# -*- coding: utf-8 -*-

from pymongo import MongoClient
import json, ast
import requests
from urllib import urlopen
from database import metadati, dati, cose
from datetime import datetime, timedelta

"""
    Esempi di query:
    - cercare un certo dato a partire dalla classe: find({"campi.classe": "A"})
    - cercare un certo dato a partire dalla classe e dalle coordinate: find({"$and": [{"geolocalization.latitude": {"$gt": "40"}}, {
    "campi.classe": "A"}]})
"""

# Cerco tutti i dati di una certa classe in una certa localizzazione
"""
campi_da_cercare = []
for doc in metadati.find({"$and": [{"geolocalization.latitude": {"$gt": "40"}}, {
    "campi.classe": "A"}]}):  # per prima cosa cerco tutti i metadati degli stream con quella classe, poi tramite lo stream_id cerco i dati
    print doc['stream_id']
    # print doc['campi']
    for field in doc['campi']:
        if field['classe'] == "A":
            # print field
            campi_da_cercare.append(field['nome_campo'])

    for d in dati.find({"stream_id": doc['stream_id']}):
        for update in d['update']:
            # print update
            for campo in campi_da_cercare:
                if campo in update.keys():
                    if update[campo] is not None:
                        print campo, '', update[campo]
"""
#
# result = []
# # Cerca i campi con classe A e longitudine > 40
# # for doc in metadati.find({"$and": [{"geolocalization.latitude": {"$gt": "40"}}, {
# #     "campi.classe": "A"}]}):
# for doc in metadati.find({"campi.classe": "A"}):
#     campi_stream = []
#     for field in doc['campi']:
#         if field['classe'] == "A":
#             campi_stream.append(field['nome_campo'])
#
#     h = {"stream": doc['stream_id'], "campi": campi_stream}
#     result.append(h)
#
# print result
# print '*********************'

# Cerca i dati corrispondenti ai campi trovati
# for campo in c:
#     for doc in dati.find({"update." + campo: {"$exists": "true", "$ne": "null"}},
#                          {"update." + campo: 1, "stream_id": 1}):
#         print 'ID:', doc['stream_id']
#         for update in doc['update']:
#             if update[campo] is not None:
#                 print update

"""
{"$and": [{"stream_id": 9}, {"update.Light": {"$exists": "true", "$ne": "null"}}]}, {"update.Light": 1, "stream_id": 1}
"""

# for stream in result:
#     for campo in stream['campi']:
#         for doc in dati.find(
#                 {"$and": [{"stream_id": stream['stream']}, {"update." + campo: {"$exists": "true", "$ne": "null"}}]},
#                 {"update." + campo: 1, "stream_id": 1, "_id": 0}):
#             print doc
#
# words = ['vent_temp', 'temp', 'unit', 'f_sensor', 'luftfeuchte', 'temp', 'humidity', 'temp', 'temp_f', 'humidity',
#          'idx', 'temp', 'humidity', 'temp', 'temp', 'humidity', 'temp', 'Memory Available (mb)', 'CPU Usage (percent)',
#          'command', 'Temperatura em Celsius', 'Field Label1', 'ADC', 'humidity', 'sunlight', 'temperature',
#          'Light Level', 'Temperature', 'Humidity', 'Light Level', 'Roof', 'Internal', 'Light Sensor', 'Random Number',
#          'Field Label1', 'Temperature', 'Time', 'Temperature', 'Time', 'Latitude', 'Velocidade', 'Longitude',
#          'Disk Space', 'Hours', 'Field Label1', 'Field Label 1', 'Rate', 'BTUs', 'Loop Temp', 'Room Temperature',
#          'Analog 0', 'Dollar Amount', 'Rate', 'Field Label1', 'Display Tank Temperature', 'Room Temperature', 'pH',
#          'test129412', 'piezo', 'cft', 'd1', 'd2', 'd3', 'd4', 'datatime', 'h0', 'h1', 'h2', 'h3', 'l0', 'l1', 'l2',
#          'l3', 'st', 't0', 't1', 't2', 't3', 'humidity', 'temp', 'humi', 'temp', 'Controller Temp', 'Hood Temp', 'PH',
#          'Tank Temp', 'Dollar Amount', 'temp', 'Temperatura', 'Tempo', 'Light Level', 'Light intensity',
#          'Tank temperature', 'Motion', 'Testing Temp', 'Temperature ', 'Temperature ', 'Alarm2', 'Humidity', 'Alarm1',
#          'Temp', 'RSSI', 'Temperature (degC)', 'LQI', 'Field Label1', 'Color', 'Temperature', 'test2', 'test1',
#          'Field Label1', 'time', 'door', 'light', 'temperature', 'temp', 'cl1', 'ng1', 'time', 'temp', 'r1', 'r2', 'r3',
#          'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 't1', 't2', 't3', 't4', 't5', 't6', 't7', 't8', 't9', 'id', 'rssi', 'temp',
#          'air_temp', 'cpu_temp', 'signal', 'temp', 'offset', 'baromin', 'batt_lvl', 'dailyrainmm', 'dewptc', 'humidity',
#          'light_lvl', 'rainmm', 'tempc', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustkmh',
#          'windgustkmh_10m', 'windspdkmh_avg2m', 'windspeedkmh', 'Server Temp', 'Field Label 8', 'Field Label 2',
#          'Field Label 3', 'utf8 test', 'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4',
#          'Outside Temperature', 'Light', 'Humidity', 'Degrees F', 'Temp', "Btu's", 'HX Out', 'Tank Top', 'HX In',
#          'Outdoor', 'Gallons Flowed', 'Collector', 'Tank Bottom', 'Sensor 2', 'Sensor 3', 'Sensor 1', 'Status 4',
#          'Current State', 'Temperatura', 'Humidade', 'Pixel Distance', 'DS1820 Temp (F)', 'Field Label1', 'Humidity',
#          'Dewpoint', 'TempC', 'Field Label1', 'temp', 'Field Label1', 'Field Label1', 'Light', 'Temperature',
#          'Temperature', 'Ambient Light', 'Soil Humidity', 'Temperature', 'Pump (On/Off)', 'Lights (On/Off)',
#          'Humidity / %', 'Temperature / \xc2\xb0C', 'Temperature', 'GageHeight', 'Size', 'Type', 'State', 'Rating',
#          'Description', 'pBillable', 'nonBillable', 'wBillable', 'lostTime', 'efficiency', 'possible', 'downTime',
#          'Not Connected', 'Master', 'Office', 'field1', 'Temperature ', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf',
#          'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
#          'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'flow', 'time',
#          'angle', 'humidity', 'temp', 'local_ip', 'relative_humidity', 'temperature_in_celsius', 'baromin', 'batt_lvl',
#          'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
#          'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
#          'windspeedmph', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'rainin', 'tempf',
#          'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
#          'windspdmph_avg2m', 'windspeedmph', 'humidity', 'tempf', 'temp', 'dewpoint', 'heatindex', 'humidity',
#          'temperature', 'bottom', 'middle', 'pump', 'timestamp', 'top', 'humidity', 'pressure', 'temp', 'hum', 'temp',
#          'co2', 'lux', 'o2', 'pvt', 'rh', 'smc1', 'smc12', 'smc2', 'smc3', 'st1', 'st2', 'st3', 'st4', 'temp',
#          'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementTime', 'rainin', 'tempf',
#          'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
#          'windspdmph_avg2m', 'windspeedmph', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl',
#          'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
#          'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'frequency', 'signal', 'temp',
#          'batterypercent', 'infraredvalue', 'soilmoistpercent', 'soilmoistvalue', 'stempc', 'stempf', 'uvindex',
#          'visiblevalue', 'd', 'heaterstate', 'i', 'p', 'settemperature', 'temperature', 'humidity', 'tempf', 'hidx',
#          'hidx2', 'hum', 'hum2', 'temp', 'temp2', 'flow', 'time', 'humidity', 'temp', 'id', 'millis', 'temp', 'hidx1',
#          'hidx2', 'hum1', 'hum2', 'temp1', 'temp2', 'shelves', 'time', 'humidity', 'light', 'temperature', 'temp',
#          'gas', 'id', 'motion', 'time', 'ch01', 'ch02', 'ch03', 'ch04', 'ch05', 'ch06', 'ch07', 'ch08', 'ch09', 'ch10',
#          'hidx', 'hum', 'temp', 'LinkMargin', 'MaxTemp', 'MinTemp', 'Temp', 'RH2', 'V0-V1', 'RH1', 'V', 'rh', 'pre',
#          'temp1', 'carga', 'temp2', 'Collector Inlet', 'Collector Outlet', 'Ambient Air', 'Tank Storage', 'Flow',
#          'Tank Return', 'Collector Return', 'temp1', 'Temperature ', 'Degrees Fahrenheit', 'Degrees Fahrenheit',
#          'Degrees Fahrenheit', '78-417', 'Test Field', 'LUX', 'Dollar amount of refund', 'field 1', 'Waterbed temp',
#          'Bedroom temp', 'Dollar Amount', 'stonetype', 'finish', 'serialnum', 'field1', 'gas', 'power', 'water',
#          'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin',
#          'solarradiation', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph',
#          'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'alarm', 'temperature1', 'temperature2', 'temperature3',
#          'temperature4', 'temperature5', 'temperature6', 'humidity', 'temperature', 'humidity', 'temp', 'nt', 'time',
#          'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf',
#          'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
#          'windspdmph_avg2m', 'windspeedmph', 'time', 't1', 't2', 't3', 't4', 't5', 't6', 'tr', 'tv', 'baromin',
#          'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
#          'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
#          'windspeedmph', 'temp0', 'temp1', 'temp2', 'temp3', 'temp4', 'humidity', 'light', 'temperature', 'colortemp',
#          'illuminance', 'lastmotion', 'maxpower', 'state', 'temperature', 'Humidity percentage', 'Pressure in hPa',
#          'Temperature in Celcius', 'Light (0-1024)', 'Light_Level', 'Voltage', 'Temperature', 'Ah', 'Wh', 'Battery',
#          'Ampere', 'Colour 8', 'Colour 2', 'Colour 3', 'Colour 1', 'Colour 6', 'Colour 7', 'Colour 5', 'Colour 4',
#          'KDB Temp (F)', 'KD Temp (F)', 'MD Temp (F)', 'KA Temp (F)', 'LW Temp (F)', 'KTB Temp (F)', 'PRD Temp (F)',
#          'DD Temp (F)', 'Radiation uSv', 'Radiation Clicks-Per-Minute', 'Load', 'Processes', 'Temperature',
#          'Free pendrive FS (MB)', 'Free root FS (MB)', 'Free RAM (MB)', 'Arm Elbow 1', 'Arm Elbow 2', 'Base Rotation',
#          'LED', 'The Claw', 'Arm Elbow3', 'FAN', 'CdS', 'Temp.[C]',
#          '\xe3\x83\x87\xe3\x83\x90\xe3\x82\xa4\xe3\x82\xb9\xe6\xad\xbb\xe6\xb4\xbb', 'Room Temperature',
#          'DT Temperature', 'Ph', 'LED Temperature', 'MDF Temperature', 'Temperature (C)', 'Light Frequency',
#          'Temperature (F)', 'Irradiance', 'Lux', 'a_pressure', 'a_temperature', 'a_v1', 'a_v2', 'cycle_id', 'd_counter',
#          'd_cycle', 'd_dwell', 'd_fault', 'd_heater', 'd_process', 'pulse_electric', 'pulse_water', 'dailyrain', 'date',
#          'dewpoint', 'hourrain', 'humidity', 'pressure', 'temp', 'time', 'winddir', 'winddiravg', 'windgust',
#          'windgustdir', 'windspeed', 'windspeedavg', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
#          'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
#          'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'humidity',
#          'outdoorc', 'poolc', 'poolf', 'current1', 'current2', 'voltage1', 'voltage2', 'hi', 'rh', 't', 'vcc',
#          'humidity', 'temp', 'BL LED Level', 'Tank', 'Room', 'PH', 'NW LED Level', 'RB LED Level', 'CW LED Level',
#          'Hood', 'Button 3', 'Luminosit', 'Slider 1', 'Temperatura', 'Button 1', 'Button 2', 'Slider 3', 'Slider 2',
#          'Luchtvochtigheid', 'Lichtintensiteit', 'Temperatuur', 'Test CPU meter', 'Bedroom Temperature', 'Kitchen Temp',
#          'Outside Temp', 'Garage Temp', '3M-50 Temperature', 'Home Control Curent', '3M-50 Setpoint', 'Freezer Temp',
#          'Output 4 (A)', 'Output 2 (V)', 'Output 3 (V)', 'Output 1 (V)', 'Output 2 (A)', 'Output 3 (A)', 'Output 1 (A)',
#          'Output 4 (V)', 'Outdoor Humidity (%)', 'Pressure (hPa)', 'Wind Direction', 'Rain (mm)', 'Outdoor Temp (',
#          'Indoor Temp (', 'Wind Speed (m/s)', 'Wind Gust (m/s)', 'OUTSIDE', 'battVoltage', 'POOL', 'loopCounter',
#          'code execution time till now', 'wiFiConnTime', 'Field Label 8', 'Field Label 2', 'Field Label 3',
#          'Field Label1', 'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4', 'Sip Channels',
#          'Battery Voltage (V)', 'Light Level', 'Temperature', 'Temperature (BMP180)', 'Pressure', 'Humidity',
#          'CPU Temperature', 'temp', 'address', 'captured', 'degrees', 'hectopascals', 'humidity', 'id', 'istweeted',
#          'charge', 'cpm', 'dose', 'humidity', 'rssi', 'temp', 'bojler', 'bojlerfut', 'huzatpoz', 'kazan', 'kazanfut',
#          'kint', 'konyha', 'szamlalo', 'venti', 'batt', 'charge', 'rssi', 'soc', 'soil', 'state', 'vbatt', 'vcc',
#          'wtime', 'dust', 'hum', 'press', 'temp', 'barotemp', 'hectopascals', 'humidity', 'tempf', 'Humidity',
#          'Temperature', 'hume', 'rocio', 'temp', 'humidity', 'lux', 'temperature']

words = ['vent_temp', 'temp', 'unit', 'f_sensor', 'luftfeuchte', 'temp', 'humidity', 'temp', 'temp_f', 'humidity',
         'idx', 'temp', 'humidity', 'temp', 'temp', 'humidity', 'temp', 'Memory Available (mb)', 'CPU Usage (percent)',
         'command', 'Temperatura em Celsius', 'Field Label1', 'ADC', 'humidity', 'sunlight', 'temperature',
         'Light Level', 'Temperature', 'Humidity', 'Light Level', 'Roof', 'Internal', 'Light Sensor', 'Random Number',
         'Field Label1', 'Temperature', 'Time', 'Temperature', 'Time', 'Latitude', 'Velocidade', 'Longitude',
         'Disk Space', 'Hours', 'Field Label1', 'Field Label 1', 'Rate', 'BTUs', 'Loop Temp', 'Room Temperature',
         'Analog 0', 'Dollar Amount', 'Rate', 'Field Label1', 'Display Tank Temperature', 'Room Temperature', 'pH',
         'test129412', 'piezo', 'cft', 'd1', 'd2', 'd3', 'd4', 'datatime', 'h0', 'h1', 'h2', 'h3', 'l0', 'l1', 'l2',
         'l3', 'st', 't0', 't1', 't2', 't3', 'humidity', 'temp', 'humi', 'temp', 'Controller Temp', 'Hood Temp', 'PH',
         'Tank Temp', 'Dollar Amount', 'temp', 'Temperatura', 'Tempo', 'Light Level', 'Light intensity',
         'Tank temperature', 'Motion', 'Testing Temp', 'Temperature ', 'Temperature ', 'Alarm2', 'Humidity', 'Alarm1',
         'Temp', 'RSSI', 'Temperature (degC)', 'LQI', 'Field Label1', 'Color', 'Temperature', 'test2', 'test1',
         'Field Label1', 'time', 'door', 'light', 'temperature', 'temp', 'cl1', 'ng1', 'time', 'temp', 'r1', 'r2', 'r3',
         'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 't1', 't2', 't3', 't4', 't5', 't6', 't7', 't8', 't9', 'id', 'rssi', 'temp',
         'air_temp', 'cpu_temp', 'signal', 'temp', 'offset', 'baromin', 'batt_lvl', 'dailyrainmm', 'dewptc', 'humidity',
         'light_lvl', 'rainmm', 'tempc', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustkmh',
         'windgustkmh_10m', 'windspdkmh_avg2m', 'windspeedkmh', 'Server Temp', 'Field Label 8', 'Field Label 2',
         'Field Label 3', 'utf8 test', 'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4',
         'Outside Temperature', 'Light', 'Humidity', 'Degrees F', 'Temp', "Btu's", 'HX Out', 'Tank Top', 'HX In',
         'Outdoor', 'Gallons Flowed', 'Collector', 'Tank Bottom', 'Sensor 2', 'Sensor 3', 'Sensor 1', 'Status 4',
         'Current State', 'Temperatura', 'Humidade', 'Pixel Distance', 'DS1820 Temp (F)', 'Field Label1', 'Humidity',
         'Dewpoint', 'TempC', 'Field Label1', 'temp', 'Field Label1', 'Field Label1', 'Light', 'Temperature',
         'Temperature', 'Ambient Light', 'Soil Humidity', 'Temperature', 'Pump (On/Off)', 'Lights (On/Off)',
         'Humidity / %', 'Temperature', 'Temperature', 'GageHeight', 'Size', 'Type', 'State', 'Rating',
         'Description', 'pBillable', 'nonBillable', 'wBillable', 'lostTime', 'efficiency', 'possible', 'downTime',
         'Not Connected', 'Master', 'Office', 'field1', 'Temperature ', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf',
         'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
         'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'flow', 'time',
         'angle', 'humidity', 'temp', 'local_ip', 'relative_humidity', 'temperature_in_celsius', 'baromin', 'batt_lvl',
         'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
         'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
         'windspeedmph', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'rainin', 'tempf',
         'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
         'windspdmph_avg2m', 'windspeedmph', 'humidity', 'tempf', 'temp', 'dewpoint', 'heatindex', 'humidity',
         'temperature', 'bottom', 'middle', 'pump', 'timestamp', 'top', 'humidity', 'pressure', 'temp', 'hum', 'temp',
         'co2', 'lux', 'o2', 'pvt', 'rh', 'smc1', 'smc12', 'smc2', 'smc3', 'st1', 'st2', 'st3', 'st4', 'temp',
         'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementTime', 'rainin', 'tempf',
         'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
         'windspdmph_avg2m', 'windspeedmph', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl',
         'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
         'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'frequency', 'signal', 'temp',
         'batterypercent', 'infraredvalue', 'soilmoistpercent', 'soilmoistvalue', 'stempc', 'stempf', 'uvindex',
         'visiblevalue', 'd', 'heaterstate', 'i', 'p', 'settemperature', 'temperature', 'humidity', 'tempf', 'hidx',
         'hidx2', 'hum', 'hum2', 'temp', 'temp2', 'flow', 'time', 'humidity', 'temp', 'id', 'millis', 'temp', 'hidx1',
         'hidx2', 'hum1', 'hum2', 'temp1', 'temp2', 'shelves', 'time', 'humidity', 'light', 'temperature', 'temp',
         'gas', 'id', 'motion', 'time', 'ch01', 'ch02', 'ch03', 'ch04', 'ch05', 'ch06', 'ch07', 'ch08', 'ch09', 'ch10',
         'hidx', 'hum', 'temp', 'LinkMargin', 'MaxTemp', 'MinTemp', 'Temp', 'RH2', 'V0-V1', 'RH1', 'V', 'rh', 'pre',
         'temp1', 'carga', 'temp2', 'Collector Inlet', 'Collector Outlet', 'Ambient Air', 'Tank Storage', 'Flow',
         'Tank Return', 'Collector Return', 'temp1', 'Temperature ', 'Degrees Fahrenheit', 'Degrees Fahrenheit',
         'Degrees Fahrenheit', '78-417', 'Test Field', 'LUX', 'Dollar amount of refund', 'field 1', 'Waterbed temp',
         'Bedroom temp', 'Dollar Amount', 'stonetype', 'finish', 'serialnum', 'field1', 'gas', 'power', 'water',
         'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin',
         'solarradiation', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph',
         'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'alarm', 'temperature1', 'temperature2', 'temperature3',
         'temperature4', 'temperature5', 'temperature6', 'humidity', 'temperature', 'humidity', 'temp', 'nt', 'time',
         'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf',
         'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
         'windspdmph_avg2m', 'windspeedmph', 'time', 't1', 't2', 't3', 't4', 't5', 't6', 'tr', 'tv', 'baromin',
         'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
         'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
         'windspeedmph', 'temp0', 'temp1', 'temp2', 'temp3', 'temp4', 'humidity', 'light', 'temperature', 'colortemp',
         'illuminance', 'lastmotion', 'maxpower', 'state', 'temperature', 'Humidity percentage', 'Pressure in hPa',
         'Temperature in Celcius', 'Light (0-1024)', 'Light_Level', 'Voltage', 'Temperature', 'Ah', 'Wh', 'Battery',
         'Ampere', 'Colour 8', 'Colour 2', 'Colour 3', 'Colour 1', 'Colour 6', 'Colour 7', 'Colour 5', 'Colour 4',
         'KDB Temp (F)', 'KD Temp (F)', 'MD Temp (F)', 'KA Temp (F)', 'LW Temp (F)', 'KTB Temp (F)', 'PRD Temp (F)',
         'DD Temp (F)', 'Radiation uSv', 'Radiation Clicks-Per-Minute', 'Load', 'Processes', 'Temperature',
         'Free pendrive FS (MB)', 'Free root FS (MB)', 'Free RAM (MB)', 'Arm Elbow 1', 'Arm Elbow 2', 'Base Rotation',
         'LED', 'The Claw', 'Arm Elbow3', 'FAN', 'CdS', 'Temp.[C]', 'Room Temperature',
         'DT Temperature', 'Ph', 'LED Temperature', 'MDF Temperature', 'Temperature (C)', 'Light Frequency',
         'Temperature (F)', 'Irradiance', 'Lux', 'a_pressure', 'a_temperature', 'a_v1', 'a_v2', 'cycle_id', 'd_counter',
         'd_cycle', 'd_dwell', 'd_fault', 'd_heater', 'd_process', 'pulse_electric', 'pulse_water', 'dailyrain', 'date',
         'dewpoint', 'hourrain', 'humidity', 'pressure', 'temp', 'time', 'winddir', 'winddiravg', 'windgust',
         'windgustdir', 'windspeed', 'windspeedavg', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
         'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
         'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'humidity',
         'outdoorc', 'poolc', 'poolf', 'current1', 'current2', 'voltage1', 'voltage2', 'hi', 'rh', 't', 'vcc',
         'humidity', 'temp', 'BL LED Level', 'Tank', 'Room', 'PH', 'NW LED Level', 'RB LED Level', 'CW LED Level',
         'Hood', 'Button 3', 'Luminosit', 'Slider 1', 'Temperatura', 'Button 1', 'Button 2', 'Slider 3', 'Slider 2',
         'Luchtvochtigheid', 'Lichtintensiteit', 'Temperatuur', 'Test CPU meter', 'Bedroom Temperature', 'Kitchen Temp',
         'Outside Temp', 'Garage Temp', '3M-50 Temperature', 'Home Control Curent', '3M-50 Setpoint', 'Freezer Temp',
         'Output 4 (A)', 'Output 2 (V)', 'Output 3 (V)', 'Output 1 (V)', 'Output 2 (A)', 'Output 3 (A)', 'Output 1 (A)',
         'Output 4 (V)', 'Outdoor Humidity (%)', 'Pressure (hPa)', 'Wind Direction', 'Rain (mm)', 'Outdoor Temp (',
         'Indoor Temp (', 'Wind Speed (m/s)', 'Wind Gust (m/s)', 'OUTSIDE', 'battVoltage', 'POOL', 'loopCounter',
         'code execution time till now', 'wiFiConnTime', 'Field Label 8', 'Field Label 2', 'Field Label 3',
         'Field Label1', 'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4', 'Sip Channels',
         'Battery Voltage (V)', 'Light Level', 'Temperature', 'Temperature (BMP180)', 'Pressure', 'Humidity',
         'CPU Temperature', 'temp', 'address', 'captured', 'degrees', 'hectopascals', 'humidity', 'id', 'istweeted',
         'charge', 'cpm', 'dose', 'humidity', 'rssi', 'temp', 'bojler', 'bojlerfut', 'huzatpoz', 'kazan', 'kazanfut',
         'kint', 'konyha', 'szamlalo', 'venti', 'batt', 'charge', 'rssi', 'soc', 'soil', 'state', 'vbatt', 'vcc',
         'wtime', 'dust', 'hum', 'press', 'temp', 'barotemp', 'hectopascals', 'humidity', 'tempf', 'Humidity',
         'Temperature', 'hume', 'rocio', 'temp', 'humidity', 'lux', 'temperature']

for w in words:
    new = w.lower()
    new = new.replace(" ", "_")
    words[words.index(w)] = new

words = list(set(words))

# x = '\xe3\x83\x87\xe3\x83\x90\xe3\x82\xa4\xe3\x82\xb9\xe6\xad\xbb\xe6\xb4\xbb'
# xx = x.encode('hex')
# print type(xx)

"""
Qui sotto estraggo dal db descrizione + nome stream + tag + nome campi per ogni stream
"""

# words_2 = []
# # {"campi.nome_campo": {$exists: "true", $ne: "null"}}, {"descrizione": {$exists: "true", $ne: "null"}}, {"nome": {$exists: "true", $ne: "null"}}, {"tags": {$exists: "true", $ne: "null"}}, {"campi.nome_campo": 1, "descrizione": 1, "nome": 1, "tags": 1, "_id": 0}
# for doc in metadati.find({"$and": [{"campi.nome_campo": {"$exists": "true", "$ne": "null"}},
#                                    {"descrizione": {"$exists": "true", "$ne": "null"}},
#                                    {"nome": {"$exists": "true", "$ne": "null"}},
#                                    {"tags": {"$exists": "true", "$ne": "null"}}]},
#                          {"campi.nome_campo": 1, "nome": 1, "descrizione": 1, "tags": 1, "_id": 0}):
#     print doc
#     words_2.append(doc['nome'].encode('utf-8'))
#     words_2.append(doc['descrizione'].encode('utf-8'))
#     for nome in doc['campi']:
#         words_2.append(nome['nome_campo'].encode('utf-8'))
#
#     for tag in doc['tags']:
#         words_2.append(tag.encode('utf-8'))



# words_2 = ['Vent Temp', 'A DHT22 situated near an HVAC vent, managed by a Particle Core/Photon', 'vent_temp', 'particle',
#      'photon', 'temp', 'Homestead Temp', 'Temperature at Lake George NY', 'temp', 'unit', 'temp',
#      ' suspicious sensor v2', 'same as  suspicious sensor  but new \xc2\xb5C', 'f_sensor', 'Wetter @5ZZ',
#      'Temperatur und Luftfeuchte in Hofheim am Taunus (5ZZ QTH)', 'luftfeuchte', 'temp', 'Sensor for Reptile Cage',
#      'Measuring data in reptile cage', 'humidity', 'temp', 'House TMP102 Test',
#      'A TMP102 sensor hooked up via an Electric IMP for testing.', 'temp_f', 'temp_f', 'Test', '123', 'humidity', 'idx',
#      'temp', 'Diningroom', 'ESP8266 with DHT22', 'humidity', 'temp', "sam's sensor #1", "sam's sensor #1", 'temp',
#      'WallE Weather 2', 'second weather sensor', 'humidity', 'temp', 'Linux Server Performance Monitor (compaq)',
#      'CPU/Memory Usage', 'Memory Available (mb)', 'CPU Usage (percent)', 'Channel 303', 'tweet control for spark core',
#      'command', 'Fez Panda II Temperatura', 'Temperature for FEZ Panda II', 'Temperatura em Celsius', 'FEZ Panda II',
#      'Channel 335', '', 'Field Label1', 'This is silly =)', 'Baaah', 'ADC', 'None', 'Weather',
#      'ThingSpeak Weather Client - How to at http://harrisonpham.com/dp/thingspeakclient', 'humidity', 'sunlight',
#      'temperature', 'weather', 'Light Sensor', 'A photocell in my room measuring the ambient light level.',
#      'Light Level', 'light', 'photocell', 'Fridgly', 'Light, Temperature and Humidity measurements', 'Temperature',
#      'Humidity', 'Light Level', 'Netduino Fridge', 'Heat Transfer', '', 'Roof', 'Internal', 'Fez Panda II Light Sensor',
#      'Light Sensor', 'Light Sensor', 'Channel 378', '', 'Random Number', 'EdsWeatherDuino',
#      'arduino with a couple sensors', 'Field Label1', 'mbed Temperature Monitor Test 1',
#      'A test channel for a temperature monitor using a mbed microcontroller', 'Temperature', 'Time',
#      'PSoC Temperature Monitor', 'My new test channel for testing purposes.', 'Temperature', 'Time', 'GPS',
#      'GPS Sensor', 'Latitude', 'Velocidade', 'Longitude', 'GPS', 'Channel 423', 'VPS disk space', 'Disk Space',
#      'Bore Monitor', 'Chestnut Farm Bore Monitor', 'Hours', 'Channel 450', '', 'Field Label1', 'Channel 464', 'test',
#      'Field Label 1', 'Channel 466', 'Boiler monitor', 'Rate', 'BTUs', 'Loop Temp', 'Home Sensors', 'Temperature',
#      'Room Temperature', 'PotSpot', 'Value of a potentiometer on my NetDuino Plus', 'Analog 0', 'IRS Refund',
#      'Please enter your tax refund below.', 'Dollar Amount', 'Channel 484', '', 'Rate', 'Channel 489', '',
#      'Field Label1', "John's Hydra Stats", 'Water parameters from Hydra controler', 'Display Tank Temperature',
#      'Room Temperature', 'pH', 'reef', 'hydra', 'tank', 'Test129412', 'Test129412', 'test129412', 'Vibration Sensor',
#      'Vibration sensor located on a CLEEN ULT Freezer', 'piezo', 'freezers', 'piezo', 'vibration', 'green house',
#      '4 dht22 sensors and 4 home built light sensors', 'cft', 'd1', 'd2', 'd3', 'd4', 'datatime', 'h0', 'h1', 'h2',
#      'h3', 'l0', 'l1', 'l2', 'l3', 'st', 't0', 't1', 't2', 't3', 'DHT22', 'DHT22 + ESP8266/NodeMCU', 'humidity', 'temp',
#      "Lipovetsky's House weather", 'build on esp2866', 'humi', 'temp', '8 Gallon Nano', '', 'Controller Temp',
#      'Hood Temp', 'PH', 'Tank Temp', 'Frozen Poker Money',
#      'Enter the amount of cash that is frozen in your online poker account.', 'Dollar Amount', 'officeTemp',
#      'Office temperature @ Wunderman Miami', 'temp', 'Teste Mbed', 'Teste para o Mbed', 'Temperatura', 'Tempo',
#      'Light Level', 'Netduino Plus Test', 'Light Level', 'netduinoplus', 'Kukulins reef', 'Experimental reef data',
#      'Light intensity', 'Tank temperature', 'Motion Sensor', 'Motion sensing from webcam', 'Motion', 'Motion',
#      'Home Control Testing', 'Testing Wiznet Board', 'Testing Temp', 'Homevision Homevisionxl plugin',
#      'Home - Attic Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire',
#      'Home - Basement Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire',
#      'EMD', 'EMD in Machine Room', 'Alarm2', 'Humidity', 'Alarm1', 'Temp', "Jacob's Bedroom",
#      'Cal Poly PCV Estrella, 4th floor', 'RSSI', 'Temperature (degC)', 'LQI', 'TI TMP175', 'Channel BOOSTUB',
#      "Mac's Hot Tub Temp and status", 'Field Label1', 'macsboost', 'Anclote Brewery', 'Brewing controller', 'Color',
#      'Temperature', 'beer', 'more beer', 'sometimes cider', 'Channel 580', 'Test Channel for Thing Speak', 'test2',
#      'test1', 'testapps', 'Channel 587', '', 'Field Label1', 'Ping Rose Time', 'Time to ping Rose from home.', 'time',
#      'Garage monitor', 'Garage temperature, light and door position', 'door', 'light', 'temperature', 'temperature',
#      'temp_bug3',
#      'my third tempbug: http://www.instructables.com/id/TempBug-internet-connected-thermometer/?ALLSTEPS likely to be used for testing',
#      'temp', 'WTI Frame', 'CL1 and NG1 prices.', 'cl1', 'ng1', 'time', 'Tempbug',
#      'An NTC thermistor measuring hot water temp', 'temp', 'hotwater', 'thermistor', 'HP_Sensor_AQ_10',
#      'temperature, humidity indoors', 'r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 't1', 't2', 't3', 't4',
#      't5', 't6', 't7', 't8', 't9', 'hp_weather', 'Test1', 'Test1', 'id', 'rssi', 'temp', 'RPI_CAM_DB01',
#      'CPU and AIR Temp form RPI', 'air_temp', 'cpu_temp', 'GarageTempBug', 'MJG temp bug', 'signal', 'temp', 'signal',
#      'temp', 'NTP Variation', 'Variation of NTP time on a Pi', 'offset', 'ntp', 'time', 'Crystal Brook Weather',
#      'Weather Station located at Crystal Brook, South Australia', 'baromin', 'batt_lvl', 'dailyrainmm', 'dewptc',
#      'humidity', 'light_lvl', 'rainmm', 'tempc', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
#      'windgustkmh', 'windgustkmh_10m', 'windspdkmh_avg2m', 'windspeedkmh', 'brook', 'crystal', 'weather', 'wimp',
#      'ioBridge Server', 'ioBridge IO-204 connected to web server to report temperatures to ThingSpeak', 'Server Temp',
#      'temperature', 'iobridge', "lee's test channel",
#      '\xce\xb3\xce\xbb\xcf\x8e\xcf\x83\xd1\x81\xd1\x82\xd1\x8b\xd0\xbd\xd0\xbd\xe1\x83\xa7\xe1\x83\x90\xe1\x83\x9d\xe1\x83\xa1 gr\xc3\xa2wen t\xc3\xa4gel\xc3\xaech safd asfd sadf as gsadg asgd asdg sad fsa fasd asdg sdfgas dgas g2',
#      'Field Label 8', 'Field Label 2', 'Field Label 3', 'utf8 test', 'Field Label 6', 'Field Label 7', 'Field Label 5',
#      'Field Label 4', 'BMP180', 'Pressure', 'temperature', 'esp8266', 'light', 'my_house',
#      'Netduino Plus connected to sensors around the house', 'Outside Temperature', 'Light', 'temp', 'light', 'sensor',
#      'Arduino Ethernet', 'Ofice Humidity using ioBridge FB-8 Humidity sensor, Arduino Diecimilia, and Ethernet Shield.',
#      'Humidity', 'Interior Temp', '', 'Degrees F', 'My Front Room', 'Front Room Temperature', 'Temp', 'Channel 21',
#      'Arduino ThingSpeak Test', "Btu's", 'HX Out', 'Tank Top', 'HX In', 'Outdoor', 'Gallons Flowed', 'Collector',
#      'Tank Bottom', 'Channel Test', 'Temperaturtest Sensor 1', 'Sensor 2', 'Sensor 3', 'Sensor 1', 'Status 4',
#      'Sensor 1', 'Test channel', 'testing with Arduino Uno', 'Current State', 'Channel 57',
#      'AguasClaras Weather Station sending Reative Humidity and Temperature', 'Temperatura', 'Humidade', 'Pixance',
#      'My mouse pixel distance covered in each time lapse, updated with Pixance.', 'Pixel Distance',
#      'mouse distance pixel python', 'Lacomb, OR', 'Temperature data for a future weather station', 'DS1820 Temp (F)',
#      'weather Lacomb Oregon', 'The (Not Very Good) Tweeting Fire Alarm',
#      'A test channel for connecting an Arduino to Twitter', 'Field Label1', 'Arduino', 'LEDA USA Environment',
#      'Office conditions at grand street!', 'Humidity', 'Dewpoint', 'TempC', 'ledartist', 'testing', 'my test channel',
#      '', 'Field Label1', 'Freezer', '', 'temp', 'Channel 126', 'Public Channel 1 for Jim Davies.', 'Field Label1',
#      'Jim', 'Davies', 'Channel 127', 'Public Channel 2 for Jim Davies.', 'Field Label1', 'Jim', 'Davies',
#      'Netduino_Test', '', 'Light', 'Thermometer',
#      'Wireless outdoor thermometer (Electric Imp, TI TMP102 sensor, 4 x AA Energizer L91).', 'Temperature',
#      'temperature', 'outdoor', 'Channel 152', 'Weather Brest, France', 'Temperature', 'Greenhouse monitor',
#      'An Arduino based greenhouse controller sending environment data via xbee to a gateway which posts the data to ThingSpeak',
#      'Ambient Light', 'Soil Humidity', 'Temperature', 'Pump (On/Off)', 'Lights (On/Off)', 'sindono.com', 'xbee',
#      'environment', 'sensor', 'temperature', 'light', 'humidity', 'Husum', 'Experimental Si7021 sensor setup.',
#      'Humidity / %', 'Temperature / \xc2\xb0C', 'temperature', 'humidity', 'Si7021', 'Temperature',
#      'Temperature in the Cycle30 office', 'Temperature', 'SWRC Streamgage1', 'Pumphouse Streamgage', 'GageHeight',
#      'Tap 1', 'Data channel for the Blue Tap', 'Size', 'Type', 'State', 'Rating', 'Description', 'Work Hours',
#      'Work Ratio', 'pBillable', 'nonBillable', 'wBillable', 'lostTime', 'efficiency', 'possible', 'downTime',
#      'Channel 185', 'IO Bridge Data', 'Not Connected', 'Master', 'Office', 'Channel 192', '', 'field1',
#      'Home - Indoor Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire',
#      'SWLincoln, Ne Weather', 'Weather Station Readings', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
#      'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
#      'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'Maint Mez',
#      'Nitrogen Flow on Maintenance Mezzanine ', 'flow', 'time', 'Rizzo Controls LLC Accelerometer Angle Data ',
#      'Accelerometer installed on EZ Stretch Knee Rehab Machine for Compliance Monitoring', 'angle', 'accel', 'controls',
#      'rizzo', 'envsensor2-pi2', 'DHT11 temp/humidity sensor.', 'humidity', 'temp', 'HP_Sensor_AQ_8',
#      'temperature, humidity sensor indoors', 'local_ip', 'relative_humidity', 'temperature_in_celsius', 'hp_weather',
#      'Weather Station in Novara (Italy)', 'A Weather Station in Novara', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf',
#      'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
#      'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'novara', 'station',
#      'weather', 'Skyline Estates Arvada WIMP', 'A complete WIMP', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf',
#      'humidity', 'light_lvl', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
#      'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'arvada', 'estates', 'skyline', 'weather',
#      'test weather', 'Testing wimp weather station', 'humidity', 'tempf', 'Blueline Server Closet Temp Sensor',
#      'Blueline Server Closet Temperature Sensor', 'temp', 'blueline', 'Raspberry Pi Weather',
#      'A Raspberry Pi Weather station decoding 433 MHz Sensors\r\n\r\nwww.billy.gr/raspberry-pi-weather-station',
#      'dewpoint', 'heatindex', 'humidity', 'temperature', 'raspberrypi', 'weather', 'Solar Hot Water Temperatures',
#      'SHWS temperatures at bottom(cold inlet and roof heater feed), middle (roof heater return) and top (tank outlet)',
#      'bottom', 'middle', 'pump', 'timestamp', 'top', 'shws', 'VBBarn1 Env',
#      'A VoltBarn sensor pack, in the downstairs workshop, using a MPL115A1 for barometric pressure, and HTU21D temp/humidity.',
#      'humidity', 'pressure', 'temp', 'weather', 'Arduino', 'temperatura', 'hum', 'temp', 'RACCS Logger',
#      'RACCS environmental sensor data', 'co2', 'lux', 'o2', 'pvt', 'rh', 'smc1', 'smc12', 'smc2', 'smc3', 'st1', 'st2',
#      'st3', 'st4', 'temp', 'Weather Dump', 'Weather information at Cilia.', 'baromin', 'batt_lvl', 'dailyrainin',
#      'dewptf', 'humidity', 'light_lvl', 'measurementTime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
#      'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'millwood', 'ny',
#      'sensor', 'weather', 'K&K Weather Station', 'WIMP K&K Weather Station', 'baromin', 'batt_lvl', 'dailyrainin',
#      'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
#      'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather',
#      'AC Line Frequency Monitor', 'High resolution frequency measurement of AC power line', 'frequency', 'WineTempBug',
#      'First TemBug', 'signal', 'temp', 'electricimp', 'imp', 'signal', 'temperature',
#      'Torrey Pines Elementary School Red Box 1',
#      'Red box 1 is a moveable waterproof box containing a Photon that is attached to a soil moisture sensor, a soil temperature sensor and an SI1145 UV, infrared, and visible light sensor. The box uses a LiPo battery and the SparkFun battery shield and has a waterproof USB connector for charging the battery as well as a waterproof on/off button.',
#      'batterypercent', 'infraredvalue', 'soilmoistpercent', 'soilmoistvalue', 'stempc', 'stempf', 'uvindex',
#      'visiblevalue', 'moisture', 'soil', 'temperature', 'uv', 'Sous Vide', 'Sous Vide PID temperature controller', 'd',
#      'heaterstate', 'i', 'p', 'settemperature', 'temperature', 'Tempel Weather',
#      'temperature and humidity data from the photon', 'humidity', 'tempf', 'Node WiFi Weather DHT11',
#      'Nodemcu esp8266 dht11', 'hidx', 'hidx2', 'hum', 'hum2', 'temp', 'temp2', 'Char Lab1', 'Nitrogen monitor', 'flow',
#      'time', 'WMP11 temperature + humidity', 'ESP8266 AM2302', 'humidity', 'temp', 'humidity', 'temp',
#      'ESP8266 monitors', 'ESP8266 monitors streaming temperature information', 'id', 'millis', 'temp', 'dht11',
#      'ds18b20', 'esp8266', 'temperature', 'UAM - AZC / Hornos 1 + 2', 'Monitoreo de condiciones de los experimentos',
#      'hidx1', 'hidx2', 'hum1', 'hum2', 'temp1', 'temp2', 'dht22', '30 Sensors logging', 'PPJ testing', 'shelves',
#      'time', 'LightSensor', 'Light sensor basic setup', 'humidity', 'light', 'temperature', 'light', 'Incubator_1',
#      'Temperature sensos - PT100\r\nA/D - ADS1247', 'temp', 'incubator', 'Balancer-Home-Gas-MQ-2',
#      'MQ-2 Gas sensor level', 'gas', 'gas', 'Pickem Motion Sensor', 'Motion sensor trial living room', 'id', 'motion',
#      'time', 'Home Energy Monitor at 140 Ly Thai To Hoi An Viet Nam',
#      'A Energy usage at 140 Ly Thai To Hoi An use Arduno and Esp8266', 'ch01', 'ch02', 'ch03', 'ch04', 'ch05', 'ch06',
#      'ch07', 'ch08', 'ch09', 'ch10', 'hoian', 'iot', 'solarpower', 'weather', 'Pokoj', 'Radek Pokoj', 'hidx', 'hum',
#      'temp', 'teplota', 'The Big Freeze',
#      'Arduino based TI102 temperature sensor monitor and display. \r\nSensor is waterproofed and  embedded in a freezer.  Degrees in Fahrenheit. See the trend:\r\nhttp://bit.ly/1XxiO6C\r\n',
#      'LinkMargin', 'MaxTemp', 'MinTemp', 'Temp', 'maxtemp', 'temp', 'Channel 201', 'New channel', 'RH2', 'V0-V1', 'RH1',
#      'Digital Step Demo', '', 'V', 'test-wm1 (0x1c23)', 'WM #1 (sensor 0x1c23)', 'rh', 'pre', 'temp1', 'carga', 'temp2',
#      "Roy's Hot Water System Controller", '', 'Collector Inlet', 'Collector Outlet', 'Ambient Air', 'Tank Storage',
#      'Flow', 'Tank Return', 'Collector Return', 'Office Temp', 'Temperature at my desk', 'temp1', 'Home - Outdoor Temp',
#      'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire', 'Attic',
#      'Left Side Attic Temp.', 'Degrees Fahrenheit', 'Outside', '', 'Degrees Fahrenheit', 'Basement',
#      'Server Closet Temp', 'Degrees Fahrenheit', 'CEIT Rooms',
#      'Logs of room temperatures for 78-{416,417,418,420} - part of the current CEIT facility.', '78-417',
#      'arduino MSP430 pubsub temperature air-conditioning', 'Gamma POSTr', '', 'Test Field', 'LDR LUX  Miklos',
#      'Teste com arduino ethernet shield e LDR', 'LUX', 'IRS Refund TEST CHANNEL', 'Please enter your IRS refund.',
#      'Dollar amount of refund', 'myChannel', 'test', 'field 1', 'Water Bed', 'Master Bedroom Water Bed',
#      'Waterbed temp', 'Bedroom temp', 'water bed temperature controller', 'IRS Refund Status Test',
#      'Please enter your IRS refund below.', 'Dollar Amount', 'StoneIT', 'teste da aplica', 'stonetype', 'finish',
#      'serialnum', 'Temperature', 'Temperature', 'field1', 'Consumption',
#      'Light sensor attached to the electricity, gas and water meters.', 'gas', 'power', 'water', 'consumption',
#      'electricity', 'gas', 'meter', 'water', 'MAN Weatherstation',
#      'MAN Weather Station dtat stream, from WIMP weatherstation project', 'baromin', 'batt_lvl', 'dailyrainin',
#      'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'solarradiation', 'tempf', 'winddir',
#      'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
#      'windspeedmph', 'nz', 'weatherstation', 'Temperature Sensors', 'A couple of DS1820 sensors connected togheter',
#      'alarm', 'temperature1', 'temperature2', 'temperature3', 'temperature4', 'temperature5', 'temperature6',
#      'temperature', 'heatcraft temp/humidity', 'test run of cellular shield', 'humidity', 'temperature', 'heatcraft',
#      'humidity', 'temperature', 'TV Room', 'ESP8266 with DHT22', 'humidity', 'temp', 'Woolston Fluxgate Magnetometer',
#      'FGM-3h', 'nt', 'time', 'Antigonish Weather', 'Wimp Weather Station located in Nova Scotia, Canada', 'baromin',
#      'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
#      'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
#      'windspeedmph', 'antigonish', 'weather', 'Omega Pings',
#      'Capturing pings from an Onion Omega to determine a reasonable range to monitor', 'time', 'ping', 'Grijanje',
#      'Mikele', 't1', 't2', 't3', 't4', 't5', 't6', 'tr', 'tv', 'Wanniassa [Admiral] weather',
#      'A weather station in Wanniassa, ACT, Australia', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
#      'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
#      'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather', 'Tank temperatures',
#      "5 Dallas DS18B20 ic's measuring the temperature of my hot water cylinder. Placed equally from top to bottom. 0 at bottom, 4 at top. Heated by gas boiler twice a day and also through solar panels if the weather is good enough!\r\n\r\n##Testing at the moment##",
#      'temp0', 'temp1', 'temp2', 'temp3', 'temp4', 'tank', 'temperature', 'water', 'Laundry Room Climate',
#      'A DHT11, and photo resistor on an ESP-8266 located on the first floor in the laundry room.', 'humidity', 'light',
#      'temperature', 'climate', 'NightLight',
#      'Smart LED stripe controller\r\nSee https://github.com/smartynov/iotfun/tree/master/nodemcu/nightlight for details',
#      'colortemp', 'illuminance', 'lastmotion', 'maxpower', 'state', 'temperature', 'home', 'iot', 'led', 'light',
#      'sensor', 'smart', 'Tampere Weather', 'Weather at east part of Tampere', 'Humidity percentage', 'Pressure in hPa',
#      'Temperature in Celcius', 'Light (0-1024)', 'Light, Temperature, Voltage',
#      'Light, Temperature of my private office + the voltage of the battery powering up my arduino that feeds the data via the ethernet shield',
#      'Light_Level', 'Voltage', 'Temperature', 'Ah', 'Wh', 'Battery', 'Ampere', 'Studio Colours',
#      'The colours in my studio', 'Colour 8', 'Colour 2', 'Colour 3', 'Colour 1', 'Colour 6', 'Colour 7', 'Colour 5',
#      'Colour 4', 'colour color', 'Data Graphs', '', 'KDB Temp (F)', 'KD Temp (F)', 'MD Temp (F)', 'KA Temp (F)',
#      'LW Temp (F)', 'KTB Temp (F)', 'PRD Temp (F)', 'DD Temp (F)',
#      'San Diego Geiger Counter / Background Radiation Monitor',
#      'The Geiger Counter updates every few minutes with counts-per-minute (CPM) and microsieverts. \r\nThis is an Unofficial/Non-Government feed and may go offline occasionally for maintenance.\r\nMore details: \r\nhttp://ibtek.wordpress.com/\r\n\r\n',
#      'Radiation uSv', 'Radiation Clicks-Per-Minute', 'Arduino', 'Geiger Counter', 'SBM-20', 'Ehtershield',
#      'Raspberry Pi Monitor', 'Monitor the performance of a Raspberry Pi', 'Load', 'Processes', 'Temperature',
#      'Free pendrive FS (MB)', 'Free root FS (MB)', 'Free RAM (MB)', 'raspberry pi raspberrypi monitor status',
#      'RoboBench', 'Control a robotic arm through the web. See what it does in real time through a Live Video Stream.',
#      'Arm Elbow 1', 'Arm Elbow 2', 'Base Rotation', 'LED', 'The Claw', 'Arm Elbow3', 'Crayfish Aquarium',
#      'Information of crayfish aquarium.\r\nwater temperature. CDS Level. State of the Cooling system(Peltier).\r\nCooling system to operate the water temperature reaches 28 degrees or more\r\n',
#      'FAN', 'CdS', 'Temp.[C]', '\xe3\x83\x87\xe3\x83\x90\xe3\x82\xa4\xe3\x82\xb9\xe6\xad\xbb\xe6\xb4\xbb', 'Arduino',
#      'Thermo module', 'Peltier', '103AT', "TeraHz's 40 breeder reef",
#      'Stats from my Hydra Controller\r\nhttp://www.hydra-reef.com/wiki/ThingSpeak', 'Room Temperature',
#      'DT Temperature', 'Ph', 'LED Temperature', 'MDF Temperature', 'Garden Sensors',
#      'Active data from various sensors in my garden.', 'Temperature (C)', 'Light Frequency', 'Temperature (F)',
#      'Irradiance', 'Lux', 'New Jersey Autoclave Data Stream', 'A stream of autoclave data.', 'a_pressure',
#      'a_temperature', 'a_v1', 'a_v2', 'cycle_id', 'd_counter', 'd_cycle', 'd_dwell', 'd_fault', 'd_heater', 'd_process',
#      'pulse_electric', 'pulse_water', 'EW1617 Data', 'EW1617 weather data from Mt. Tabor, Portland, Oregon.',
#      'dailyrain', 'date', 'dewpoint', 'hourrain', 'humidity', 'pressure', 'temp', 'time', 'winddir', 'winddiravg',
#      'windgust', 'windgustdir', 'windspeed', 'windspeedavg', 'portland', 'weather', 'JJ WIMP',
#      'Sparkfun Weather Station ', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl',
#      'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph',
#      'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather', 'pooltemp',
#      'pool Temp and current weater around pool', 'humidity', 'outdoorc', 'poolc', 'poolf', 'weather',
#      'Solar System Power Status', 'Shows the voltage and current input/output of a solar powered weather station',
#      'current1', 'current2', 'voltage1', 'voltage2',
#      '\xd0\x92\xd0\xb5\xd1\x81\xd0\xb5\xd0\xbb\xd0\xba\xd0\xbe\xd0\xb2\xd0\xb0 \xd0\xa5\xd0\xb0\xd1\x82\xd0\xb0',
#      '\xd0\x9f\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xba\xd1\x96\xd0\xb9', 'hi', 'rh', 't', 'vcc',
#      'dht11', 'esp01', 'esp8266', 'Amurrio weather | Amurrio eguraldia',
#      'Data from DS18B20 temperature sensor and HH10D humidity sensor located at Amurrio. Visualize this data on Google Charts: http://cvzcaoio.appspot.com. My twitter: http://twitter.com/ocasquero',
#      'humidity', 'temp', 'amurrio', 'arduino_pro_mini', 'arduino_yun', 'ds18b20', 'eguraldia', 'hh10d', 'humidity',
#      'temperature', 'weather', 'xbee', "Brian's Hydra Info", 'Aquarium Controller Data', 'BL LED Level', 'Tank', 'Room',
#      'PH', 'NW LED Level', 'RB LED Level', 'CW LED Level', 'Hood', 'Innovactive Channel 1', 'Canale di test',
#      'Button 3', 'Luminosit', 'Slider 1', 'Temperatura', 'Button 1', 'Button 2', 'Slider 3', 'Slider 2',
#      'innovactive test', 'Straat-o-meter', 'Sensoring data in an agriculture environment. ', 'Luchtvochtigheid',
#      'Lichtintensiteit', 'Temperatuur', 'Test CPU meter', 'Home Control Temps', 'Home Control Temperatures',
#      'Bedroom Temperature', 'Kitchen Temp', 'Outside Temp', 'Garage Temp', '3M-50 Temperature', 'Home Control Curent',
#      '3M-50 Setpoint', 'Freezer Temp', 'Aggie', '', 'Output 4 (A)', 'Output 2 (V)', 'Output 3 (V)', 'Output 1 (V)',
#      'Output 2 (A)', 'Output 3 (A)', 'Output 1 (A)', 'Output 4 (V)', 'Weather Station (ACM5002)',
#      'Selection of Weather station data collected from a WH2081 by an OpenGear ACM5002', 'Outdoor Humidity (%)',
#      'Pressure (hPa)', 'Wind Direction', 'Rain (mm)', 'Outdoor Temp (', 'Indoor Temp (', 'Wind Speed (m/s)',
#      'Wind Gust (m/s)', 'Channel 557', 'Pool Temp', 'OUTSIDE', 'battVoltage', 'POOL', 'loopCounter',
#      'code execution time till now', 'wiFiConnTime', 'iwsnqq', 'hello world', 'Field Label 8', 'Field Label 2',
#      'Field Label 3', 'Field Label1', 'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4', 'sunshine',
#      'light', 'Study', 'Shows some sensor info from a RaspberryPi running in my study at home (Sydney, NSW)\r\n\r\n',
#      'Sip Channels', 'Battery Voltage (V)', 'Light Level', 'Temperature', 'Temperature (BMP180)', 'Pressure',
#      'Humidity', 'CPU Temperature', 'weather\r\n', 'bug2: cottage bathroom temp (1min data)',
#      'my second tempbug:\r\nhttp://www.instructables.com/id/TempBug-internet-connected-thermometer/?ALLSTEPS\r\n\r\nlikely to be used to measure indoor temperature at the brevard house',
#      'temp', '56R Data', 'BME280 chip collecting Temp/Barometric pressure.', 'address', 'captured', 'degrees',
#      'hectopascals', 'humidity', 'id', 'istweeted', 'temperature', 'Geiger Counter',
#      'Geiger counter + temperatura+umidit\xc3\xa0', 'charge', 'cpm', 'dose', 'humidity', 'rssi', 'temp', 'geiger',
#      'Kaz\xc3\xa1n vez\xc3\xa9rl\xc5\x91', 'Vegyes kaz\xc3\xa1n....', 'bojler', 'bojlerfut', 'huzatpoz', 'kazan',
#      'kazanfut', 'kint', 'konyha', 'szamlalo', 'venti', 'Solar Toy', 'Tests solar charging and soil moisture.', 'batt',
#      'charge', 'rssi', 'soc', 'soil', 'state', 'vbatt', 'vcc', 'wtime', 'Fork: RiverRuns Weather station ',
#      'analog.io/s30D - RiverRuns weather station test.\r\n(Fork of s3894)', 'dust', 'hum', 'press', 'temp',
#      'Knype Weather', 'Knypersley Weather', 'barotemp', 'hectopascals', 'humidity', 'tempf', 'weather', 'Apt Weather',
#      'An Arduino UNO board that polls a SHT15 and sends a serial string to a RN-131C.', 'Humidity', 'Temperature',
#      'sht15', 'RN-131C', 'wifly', 'uno', 'temp', 'humidity', 'Channel 116 a ver ...', 'ESP8266 arduino', 'hume',
#      'rocio', 'temp', 'lima', 'peru', 'esp8266', 'Arduino', 'Temperatura', 'humedad', 'Outdoor light, temp, humidity',
#      'A TSL2561 and a HTU21D in Longmont', 'humidity', 'lux', 'temperature', 'humidity', 'light', 'temperature',
#      'weather']


words_2 = ['Vent Temp', 'A DHT22 situated near an HVAC vent, managed by a Particle Core/Photon', 'vent_temp',
           'particle', 'photon', 'temp', 'Homestead Temp', 'Temperature at Lake George NY', 'temp', 'unit', 'temp',
           ' suspicious sensor v2', 'same as  suspicious sensor  but new C', 'f_sensor', 'Wetter @5ZZ',
           'Temperatur und Luftfeuchte in Hofheim am Taunus (5ZZ QTH)', 'luftfeuchte', 'temp',
           'Sensor for Reptile Cage', 'Measuring data in reptile cage', 'humidity', 'temp', 'House TMP102 Test',
           'A TMP102 sensor hooked up via an Electric IMP for testing.', 'temp_f', 'temp_f', 'Test', '123', 'humidity',
           'idx', 'temp', 'Diningroom', 'ESP8266 with DHT22', 'humidity', 'temp', "sam's sensor #1", "sam's sensor #1",
           'temp', 'WallE Weather 2', 'second weather sensor', 'humidity', 'temp',
           'Linux Server Performance Monitor (compaq)', 'CPU/Memory Usage', 'Memory Available (mb)',
           'CPU Usage (percent)', 'Channel 303', 'tweet control for spark core', 'command', 'Fez Panda II Temperatura',
           'Temperature for FEZ Panda II', 'Temperatura em Celsius', 'FEZ Panda II', 'Channel 335', 'Field Label1',
           'This is silly =)', 'Baaah', 'ADC', 'None', 'Weather',
           'ThingSpeak Weather Client - How to at http://harrisonpham.com/dp/thingspeakclient', 'humidity', 'sunlight',
           'temperature', 'weather', 'Light Sensor', 'A photocell in my room measuring the ambient light level.',
           'Light Level', 'light', 'photocell', 'Fridgly', 'Light, Temperature and Humidity measurements',
           'Temperature', 'Humidity', 'Light Level', 'Netduino Fridge', 'Heat Transfer', 'Roof', 'Internal',
           'Fez Panda II Light Sensor', 'Light Sensor', 'Light Sensor', 'Channel 378', 'Random Number',
           'EdsWeatherDuino', 'arduino with a couple sensors', 'Field Label1', 'mbed Temperature Monitor Test 1',
           'A test channel for a temperature monitor using a mbed microcontroller', 'Temperature', 'Time',
           'PSoC Temperature Monitor', 'My new test channel for testing purposes.', 'Temperature', 'Time', 'GPS',
           'GPS Sensor', 'Latitude', 'Velocidade', 'Longitude', 'GPS', 'Channel 423', 'VPS disk space', 'Disk Space',
           'Bore Monitor', 'Chestnut Farm Bore Monitor', 'Hours', 'Channel 450', 'Field Label1', 'Channel 464', 'test',
           'Field Label 1', 'Channel 466', 'Boiler monitor', 'Rate', 'BTUs', 'Loop Temp', 'Home Sensors', 'Temperature',
           'Room Temperature', 'PotSpot', 'Value of a potentiometer on my NetDuino Plus', 'Analog 0', 'IRS Refund',
           'Please enter your tax refund below.', 'Dollar Amount', 'Channel 484', 'Rate', 'Channel 489', 'Field Label1',
           "John's Hydra Stats", 'Water parameters from Hydra controler', 'Display Tank Temperature',
           'Room Temperature', 'pH', 'reef', 'hydra', 'tank', 'Test129412', 'Test129412', 'test129412',
           'Vibration Sensor', 'Vibration sensor located on a CLEEN ULT Freezer', 'piezo', 'freezers', 'piezo',
           'vibration', 'green house', '4 dht22 sensors and 4 home built light sensors', 'cft', 'd1', 'd2', 'd3', 'd4',
           'datatime', 'h0', 'h1', 'h2', 'h3', 'l0', 'l1', 'l2', 'l3', 'st', 't0', 't1', 't2', 't3', 'DHT22',
           'DHT22 + ESP8266/NodeMCU', 'humidity', 'temp', "Lipovetsky's House weather", 'build on esp2866', 'humi',
           'temp', '8 Gallon Nano', 'Controller Temp', 'Hood Temp', 'PH', 'Tank Temp', 'Frozen Poker Money',
           'Enter the amount of cash that is frozen in your online poker account.', 'Dollar Amount', 'officeTemp',
           'Office temperature @ Wunderman Miami', 'temp', 'Teste Mbed', 'Teste para o Mbed', 'Temperatura', 'Tempo',
           'Light Level', 'Netduino Plus Test', 'Light Level', 'netduinoplus', 'Kukulins reef',
           'Experimental reef data', 'Light intensity', 'Tank temperature', 'Motion Sensor',
           'Motion sensing from webcam', 'Motion', 'Motion', 'Home Control Testing', 'Testing Wiznet Board',
           'Testing Temp', 'Homevision Homevisionxl plugin', 'Home - Attic Temp',
           'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire',
           'Home - Basement Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino',
           '1-Wire', 'EMD', 'EMD in Machine Room', 'Alarm2', 'Humidity', 'Alarm1', 'Temp', "Jacob's Bedroom",
           'Cal Poly PCV Estrella, 4th floor', 'RSSI', 'Temperature (degC)', 'LQI', 'TI TMP175', 'Channel BOOSTUB',
           "Mac's Hot Tub Temp and status", 'Field Label1', 'macsboost', 'Anclote Brewery', 'Brewing controller',
           'Color', 'Temperature', 'beer', 'more beer', 'sometimes cider', 'Channel 580',
           'Test Channel for Thing Speak', 'test2', 'test1', 'testapps', 'Channel 587', 'Field Label1',
           'Ping Rose Time', 'Time to ping Rose from home.', 'time', 'Garage monitor',
           'Garage temperature, light and door position', 'door', 'light', 'temperature', 'temperature', 'temp_bug3',
           'my third tempbug: http://www.instructables.com/id/TempBug-internet-connected-thermometer/?ALLSTEPS likely to be used for testing',
           'temp', 'WTI Frame', 'CL1 and NG1 prices.', 'cl1', 'ng1', 'time', 'Tempbug',
           'An NTC thermistor measuring hot water temp', 'temp', 'hotwater', 'thermistor', 'HP_Sensor_AQ_10',
           'temperature, humidity indoors', 'r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 't1', 't2', 't3',
           't4', 't5', 't6', 't7', 't8', 't9', 'hp_weather', 'Test1', 'Test1', 'id', 'rssi', 'temp', 'RPI_CAM_DB01',
           'CPU and AIR Temp form RPI', 'air_temp', 'cpu_temp', 'GarageTempBug', 'MJG temp bug', 'signal', 'temp',
           'signal', 'temp', 'NTP Variation', 'Variation of NTP time on a Pi', 'offset', 'ntp', 'time',
           'Crystal Brook Weather', 'Weather Station located at Crystal Brook, South Australia', 'baromin', 'batt_lvl',
           'dailyrainmm', 'dewptc', 'humidity', 'light_lvl', 'rainmm', 'tempc', 'winddir', 'winddir_avg2m',
           'windgustdir', 'windgustdir_10m', 'windgustkmh', 'windgustkmh_10m', 'windspdkmh_avg2m', 'windspeedkmh',
           'brook', 'crystal', 'weather', 'wimp', 'ioBridge Server',
           'ioBridge IO-204 connected to web server to report temperatures to ThingSpeak', 'Server Temp', 'temperature',
           'iobridge', "lee's test channel", 'Field Label 8', 'Field Label 2', 'Field Label 3', 'utf8 test',
           'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4', 'BMP180', 'Pressure', 'temperature',
           'esp8266', 'light', 'my_house', 'Netduino Plus connected to sensors around the house', 'Outside Temperature',
           'Light', 'temp', 'light', 'sensor', 'Arduino Ethernet',
           'Ofice Humidity using ioBridge FB-8 Humidity sensor, Arduino Diecimilia, and Ethernet Shield.', 'Humidity',
           'Interior Temp', 'Degrees F', 'My Front Room', 'Front Room Temperature', 'Temp', 'Channel 21',
           'Arduino ThingSpeak Test', "Btu's", 'HX Out', 'Tank Top', 'HX In', 'Outdoor', 'Gallons Flowed', 'Collector',
           'Tank Bottom', 'Channel Test', 'Temperaturtest Sensor 1', 'Sensor 2', 'Sensor 3', 'Sensor 1', 'Status 4',
           'Sensor 1', 'Test channel', 'testing with Arduino Uno', 'Current State', 'Channel 57',
           'AguasClaras Weather Station sending Reative Humidity and Temperature', 'Temperatura', 'Humidade', 'Pixance',
           'My mouse pixel distance covered in each time lapse, updated with Pixance.', 'Pixel Distance',
           'mouse distance pixel python', 'Lacomb, OR', 'Temperature data for a future weather station',
           'DS1820 Temp (F)', 'weather Lacomb Oregon', 'The (Not Very Good) Tweeting Fire Alarm',
           'A test channel for connecting an Arduino to Twitter', 'Field Label1', 'Arduino', 'LEDA USA Environment',
           'Office conditions at grand street!', 'Humidity', 'Dewpoint', 'TempC', 'ledartist', 'testing',
           'my test channel', 'Field Label1', 'Freezer', 'temp', 'Channel 126', 'Public Channel 1 for Jim Davies.',
           'Field Label1', 'Jim', 'Davies', 'Channel 127', 'Public Channel 2 for Jim Davies.', 'Field Label1', 'Jim',
           'Davies', 'Netduino_Test', 'Light', 'Thermometer',
           'Wireless outdoor thermometer (Electric Imp, TI TMP102 sensor, 4 x AA Energizer L91).', 'Temperature',
           'temperature', 'outdoor', 'Channel 152', 'Weather Brest, France', 'Temperature', 'Greenhouse monitor',
           'An Arduino based greenhouse controller sending environment data via xbee to a gateway which posts the data to ThingSpeak',
           'Ambient Light', 'Soil Humidity', 'Temperature', 'Pump (On/Off)', 'Lights (On/Off)', 'sindono.com', 'xbee',
           'environment', 'sensor', 'temperature', 'light', 'humidity', 'Husum', 'Experimental Si7021 sensor setup.',
           'Humidity / %', 'TemperatureC', 'temperature', 'humidity', 'Si7021', 'Temperature',
           'Temperature in the Cycle30 office', 'Temperature', 'SWRC Streamgage1', 'Pumphouse Streamgage', 'GageHeight',
           'Tap 1', 'Data channel for the Blue Tap', 'Size', 'Type', 'State', 'Rating', 'Description', 'Work Hours',
           'Work Ratio', 'pBillable', 'nonBillable', 'wBillable', 'lostTime', 'efficiency', 'possible', 'downTime',
           'Channel 185', 'IO Bridge Data', 'Not Connected', 'Master', 'Office', 'Channel 192', 'field1',
           'Home - Indoor Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino',
           '1-Wire', 'SWLincoln, Ne Weather', 'Weather Station Readings', 'baromin', 'batt_lvl', 'dailyrainin',
           'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m',
           'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph',
           'Maint Mez', 'Nitrogen Flow on Maintenance Mezzanine ', 'flow', 'time',
           'Rizzo Controls LLC Accelerometer Angle Data ',
           'Accelerometer installed on EZ Stretch Knee Rehab Machine for Compliance Monitoring', 'angle', 'accel',
           'controls', 'rizzo', 'envsensor2-pi2', 'DHT11 temp/humidity sensor.', 'humidity', 'temp', 'HP_Sensor_AQ_8',
           'temperature, humidity sensor indoors', 'local_ip', 'relative_humidity', 'temperature_in_celsius',
           'hp_weather', 'Weather Station in Novara (Italy)', 'A Weather Station in Novara', 'baromin', 'batt_lvl',
           'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
           'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
           'windspeedmph', 'novara', 'station', 'weather', 'Skyline Estates Arvada WIMP', 'A complete WIMP', 'baromin',
           'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'rainin', 'tempf', 'winddir', 'winddir_avg2m',
           'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph',
           'arvada', 'estates', 'skyline', 'weather', 'test weather', 'Testing wimp weather station', 'humidity',
           'tempf', 'Blueline Server Closet Temp Sensor', 'Blueline Server Closet Temperature Sensor', 'temp',
           'blueline', 'Raspberry Pi Weather',
           'A Raspberry Pi Weather station decoding 433 MHz Sensors www.billy.gr/raspberry-pi-weather-station',
           'dewpoint', 'heatindex', 'humidity', 'temperature', 'raspberrypi', 'weather', 'Solar Hot Water Temperatures',
           'SHWS temperatures at bottom(cold inlet and roof heater feed), middle (roof heater return) and top (tank outlet)',
           'bottom', 'middle', 'pump', 'timestamp', 'top', 'shws', 'VBBarn1 Env',
           'A VoltBarn sensor pack, in the downstairs workshop, using a MPL115A1 for barometric pressure, and HTU21D temp/humidity.',
           'humidity', 'pressure', 'temp', 'weather', 'Arduino', 'temperatura', 'hum', 'temp', 'RACCS Logger',
           'RACCS environmental sensor data', 'co2', 'lux', 'o2', 'pvt', 'rh', 'smc1', 'smc12', 'smc2', 'smc3', 'st1',
           'st2', 'st3', 'st4', 'temp', 'Weather Dump', 'Weather information at Cilia.', 'baromin', 'batt_lvl',
           'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementTime', 'rainin', 'tempf', 'winddir',
           'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
           'windspeedmph', 'millwood', 'ny', 'sensor', 'weather', 'K&K Weather Station', 'WIMP K&K Weather Station',
           'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin',
           'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m',
           'windspdmph_avg2m', 'windspeedmph', 'weather', 'AC Line Frequency Monitor',
           'High resolution frequency measurement of AC power line', 'frequency', 'WineTempBug', 'First TemBug',
           'signal', 'temp', 'electricimp', 'imp', 'signal', 'temperature', 'Torrey Pines Elementary School Red Box 1',
           'Red box 1 is a moveable waterproof box containing a Photon that is attached to a soil moisture sensor, a soil temperature sensor and an SI1145 UV, infrared, and visible light sensor. The box uses a LiPo battery and the SparkFun battery shield and has a waterproof USB connector for charging the battery as well as a waterproof on/off button.',
           'batterypercent', 'infraredvalue', 'soilmoistpercent', 'soilmoistvalue', 'stempc', 'stempf', 'uvindex',
           'visiblevalue', 'moisture', 'soil', 'temperature', 'uv', 'Sous Vide', 'Sous Vide PID temperature controller',
           'd', 'heaterstate', 'i', 'p', 'settemperature', 'temperature', 'Tempel Weather',
           'temperature and humidity data from the photon', 'humidity', 'tempf', 'Node WiFi Weather DHT11',
           'Nodemcu esp8266 dht11', 'hidx', 'hidx2', 'hum', 'hum2', 'temp', 'temp2', 'Char Lab1', 'Nitrogen monitor',
           'flow', 'time', 'WMP11 temperature + humidity', 'ESP8266 AM2302', 'humidity', 'temp', 'humidity', 'temp',
           'ESP8266 monitors', 'ESP8266 monitors streaming temperature information', 'id', 'millis', 'temp', 'dht11',
           'ds18b20', 'esp8266', 'temperature', 'UAM - AZC / Hornos 1 + 2',
           'Monitoreo de condiciones de los experimentos', 'hidx1', 'hidx2', 'hum1', 'hum2', 'temp1', 'temp2', 'dht22',
           '30 Sensors logging', 'PPJ testing', 'shelves', 'time', 'LightSensor', 'Light sensor basic setup',
           'humidity', 'light', 'temperature', 'light', 'Incubator_1', 'Temperature sensos - PT100 A/D - ADS1247',
           'temp', 'incubator', 'Balancer-Home-Gas-MQ-2', 'MQ-2 Gas sensor level', 'gas', 'gas', 'Pickem Motion Sensor',
           'Motion sensor trial living room', 'id', 'motion', 'time',
           'Home Energy Monitor at 140 Ly Thai To Hoi An Viet Nam',
           'A Energy usage at 140 Ly Thai To Hoi An use Arduno and Esp8266', 'ch01', 'ch02', 'ch03', 'ch04', 'ch05',
           'ch06', 'ch07', 'ch08', 'ch09', 'ch10', 'hoian', 'iot', 'solarpower', 'weather', 'Pokoj', 'Radek Pokoj',
           'hidx', 'hum', 'temp', 'teplota', 'The Big Freeze',
           'Arduino based TI102 temperature sensor monitor and display. Sensor is waterproofed and  embedded in a freezer.  Degrees in Fahrenheit. See the trend:\r\nhttp://bit.ly/1XxiO6C\r\n',
           'LinkMargin', 'MaxTemp', 'MinTemp', 'Temp', 'maxtemp', 'temp', 'Channel 201', 'New channel', 'RH2', 'V0-V1',
           'RH1', 'Digital Step Demo', 'V', 'test-wm1 (0x1c23)', 'WM #1 (sensor 0x1c23)', 'rh', 'pre', 'temp1', 'carga',
           'temp2', "Roy's Hot Water System Controller", 'Collector Inlet', 'Collector Outlet', 'Ambient Air',
           'Tank Storage', 'Flow', 'Tank Return', 'Collector Return', 'Office Temp', 'Temperature at my desk', 'temp1',
           'Home - Outdoor Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino',
           '1-Wire', 'Attic', 'Left Side Attic Temp.', 'Degrees Fahrenheit', 'Outside', 'Degrees Fahrenheit',
           'Basement', 'Server Closet Temp', 'Degrees Fahrenheit', 'CEIT Rooms',
           'Logs of room temperatures for 78-{416,417,418,420} - part of the current CEIT facility.', '78-417',
           'arduino MSP430 pubsub temperature air-conditioning', 'Gamma POSTr', 'Test Field', 'LDR LUX  Miklos',
           'Teste com arduino ethernet shield e LDR', 'LUX', 'IRS Refund TEST CHANNEL', 'Please enter your IRS refund.',
           'Dollar amount of refund', 'myChannel', 'test', 'field 1', 'Water Bed', 'Master Bedroom Water Bed',
           'Waterbed temp', 'Bedroom temp', 'water bed temperature controller', 'IRS Refund Status Test',
           'Please enter your IRS refund below.', 'Dollar Amount', 'StoneIT', 'teste da aplica', 'stonetype', 'finish',
           'serialnum', 'Temperature', 'Temperature', 'field1', 'Consumption',
           'Light sensor attached to the electricity, gas and water meters.', 'gas', 'power', 'water', 'consumption',
           'electricity', 'gas', 'meter', 'water', 'MAN Weatherstation',
           'MAN Weather Station dtat stream, from WIMP weatherstation project', 'baromin', 'batt_lvl', 'dailyrainin',
           'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'solarradiation', 'tempf', 'winddir',
           'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
           'windspeedmph', 'nz', 'weatherstation', 'Temperature Sensors',
           'A couple of DS1820 sensors connected togheter', 'alarm', 'temperature1', 'temperature2', 'temperature3',
           'temperature4', 'temperature5', 'temperature6', 'temperature', 'heatcraft temp/humidity',
           'test run of cellular shield', 'humidity', 'temperature', 'heatcraft', 'humidity', 'temperature', 'TV Room',
           'ESP8266 with DHT22', 'humidity', 'temp', 'Woolston Fluxgate Magnetometer', 'FGM-3h', 'nt', 'time',
           'Antigonish Weather', 'Wimp Weather Station located in Nova Scotia, Canada', 'baromin', 'batt_lvl',
           'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
           'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
           'windspeedmph', 'antigonish', 'weather', 'Omega Pings',
           'Capturing pings from an Onion Omega to determine a reasonable range to monitor', 'time', 'ping', 'Grijanje',
           'Mikele', 't1', 't2', 't3', 't4', 't5', 't6', 'tr', 'tv', 'Wanniassa [Admiral] weather',
           'A weather station in Wanniassa, ACT, Australia', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
           'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
           'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather',
           'Tank temperatures',
           "5 Dallas DS18B20 ic's measuring the temperature of my hot water cylinder. Placed equally from top to bottom. 0 at bottom, 4 at top. Heated by gas boiler twice a day and also through solar panels if the weather is good enough!\r\n\r\n##Testing at the moment##",
           'temp0', 'temp1', 'temp2', 'temp3', 'temp4', 'tank', 'temperature', 'water', 'Laundry Room Climate',
           'A DHT11, and photo resistor on an ESP-8266 located on the first floor in the laundry room.', 'humidity',
           'light', 'temperature', 'climate', 'NightLight',
           'Smart LED stripe controller See https://github.com/smartynov/iotfun/tree/master/nodemcu/nightlight for details',
           'colortemp', 'illuminance', 'lastmotion', 'maxpower', 'state', 'temperature', 'home', 'iot', 'led', 'light',
           'sensor', 'smart', 'Tampere Weather', 'Weather at east part of Tampere', 'Humidity percentage',
           'Pressure in hPa', 'Temperature in Celcius', 'Light (0-1024)', 'Light, Temperature, Voltage',
           'Light, Temperature of my private office + the voltage of the battery powering up my arduino that feeds the data via the ethernet shield',
           'Light_Level', 'Voltage', 'Temperature', 'Ah', 'Wh', 'Battery', 'Ampere', 'Studio Colours',
           'The colours in my studio', 'Colour 8', 'Colour 2', 'Colour 3', 'Colour 1', 'Colour 6', 'Colour 7',
           'Colour 5', 'Colour 4', 'colour color', 'Data Graphs', 'KDB Temp (F)', 'KD Temp (F)', 'MD Temp (F)',
           'KA Temp (F)', 'LW Temp (F)', 'KTB Temp (F)', 'PRD Temp (F)', 'DD Temp (F)',
           'San Diego Geiger Counter / Background Radiation Monitor',
           'The Geiger Counter updates every few minutes with counts-per-minute (CPM) and microsieverts. This is an Unofficial/Non-Government feed and may go offline occasionally for maintenance.\r\nMore details: \r\nhttp://ibtek.wordpress.com/\r\n\r\n',
           'Radiation uSv', 'Radiation Clicks-Per-Minute', 'Arduino', 'Geiger Counter', 'SBM-20', 'Ehtershield',
           'Raspberry Pi Monitor', 'Monitor the performance of a Raspberry Pi', 'Load', 'Processes', 'Temperature',
           'Free pendrive FS (MB)', 'Free root FS (MB)', 'Free RAM (MB)', 'raspberry pi raspberrypi monitor status',
           'RoboBench',
           'Control a robotic arm through the web. See what it does in real time through a Live Video Stream.',
           'Arm Elbow 1', 'Arm Elbow 2', 'Base Rotation', 'LED', 'The Claw', 'Arm Elbow3', 'Crayfish Aquarium',
           'Information of crayfish aquarium. water temperature. CDS Level. State of the Cooling system(Peltier).Cooling system to operate the water temperature reaches 28 degrees or more\r\n',
           'FAN', 'CdS', 'Temp.[C]', 'Arduino', 'Thermo module', 'Peltier', '103AT', "TeraHz's 40 breeder reef",
           'Stats from my Hydra Controller http://www.hydra-reef.com/wiki/ThingSpeak', 'Room Temperature',
           'DT Temperature', 'Ph', 'LED Temperature', 'MDF Temperature', 'Garden Sensors',
           'Active data from various sensors in my garden.', 'Temperature (C)', 'Light Frequency', 'Temperature (F)',
           'Irradiance', 'Lux', 'New Jersey Autoclave Data Stream', 'A stream of autoclave data.', 'a_pressure',
           'a_temperature', 'a_v1', 'a_v2', 'cycle_id', 'd_counter', 'd_cycle', 'd_dwell', 'd_fault', 'd_heater',
           'd_process', 'pulse_electric', 'pulse_water', 'EW1617 Data',
           'EW1617 weather data from Mt. Tabor, Portland, Oregon.', 'dailyrain', 'date', 'dewpoint', 'hourrain',
           'humidity', 'pressure', 'temp', 'time', 'winddir', 'winddiravg', 'windgust', 'windgustdir', 'windspeed',
           'windspeedavg', 'portland', 'weather', 'JJ WIMP', 'Sparkfun Weather Station ', 'baromin', 'batt_lvl',
           'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir',
           'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
           'windspeedmph', 'weather', 'pooltemp', 'pool Temp and current weater around pool', 'humidity', 'outdoorc',
           'poolc', 'poolf', 'weather', 'Solar System Power Status',
           'Shows the voltage and current input/output of a solar powered weather station', 'current1', 'current2',
           'voltage1', 'voltage2', 'hi', 'rh', 't', 'vcc', 'dht11', 'esp01', 'esp8266',
           'Amurrio weather | Amurrio eguraldia',
           'Data from DS18B20 temperature sensor and HH10D humidity sensor located at Amurrio. Visualize this data on Google Charts: http://cvzcaoio.appspot.com. My twitter: http://twitter.com/ocasquero',
           'humidity', 'temp', 'amurrio', 'arduino_pro_mini', 'arduino_yun', 'ds18b20', 'eguraldia', 'hh10d',
           'humidity', 'temperature', 'weather', 'xbee', "Brian's Hydra Info", 'Aquarium Controller Data',
           'BL LED Level', 'Tank', 'Room', 'PH', 'NW LED Level', 'RB LED Level', 'CW LED Level', 'Hood',
           'Innovactive Channel 1', 'Canale di test', 'Button 3', 'Luminosit', 'Slider 1', 'Temperatura', 'Button 1',
           'Button 2', 'Slider 3', 'Slider 2', 'innovactive test', 'Straat-o-meter',
           'Sensoring data in an agriculture environment. ', 'Luchtvochtigheid', 'Lichtintensiteit', 'Temperatuur',
           'Test CPU meter', 'Home Control Temps', 'Home Control Temperatures', 'Bedroom Temperature', 'Kitchen Temp',
           'Outside Temp', 'Garage Temp', '3M-50 Temperature', 'Home Control Curent', '3M-50 Setpoint', 'Freezer Temp',
           'Aggie', 'Output 4 (A)', 'Output 2 (V)', 'Output 3 (V)', 'Output 1 (V)', 'Output 2 (A)', 'Output 3 (A)',
           'Output 1 (A)', 'Output 4 (V)', 'Weather Station (ACM5002)',
           'Selection of Weather station data collected from a WH2081 by an OpenGear ACM5002', 'Outdoor Humidity (%)',
           'Pressure (hPa)', 'Wind Direction', 'Rain (mm)', 'Outdoor Temp (', 'Indoor Temp (', 'Wind Speed (m/s)',
           'Wind Gust (m/s)', 'Channel 557', 'Pool Temp', 'OUTSIDE', 'battVoltage', 'POOL', 'loopCounter',
           'code execution time till now', 'wiFiConnTime', 'iwsnqq', 'hello world', 'Field Label 8', 'Field Label 2',
           'Field Label 3', 'Field Label1', 'Field Label 6', 'Field Label 7', 'Field Label 5', 'Field Label 4',
           'sunshine', 'light', 'Study',
           'Shows some sensor info from a RaspberryPi running in my study at home (Sydney, NSW)', 'Sip Channels',
           'Battery Voltage (V)', 'Light Level', 'Temperature', 'Temperature (BMP180)', 'Pressure', 'Humidity',
           'CPU Temperature', 'weather', 'bug2: cottage bathroom temp (1min data)',
           'my second tempbug: http://www.instructables.com/id/TempBug-internet-connected-thermometer/?ALLSTEPS likely to be used to measure indoor temperature at the brevard house',
           'temp', '56R Data', 'BME280 chip collecting Temp/Barometric pressure.', 'address', 'captured', 'degrees',
           'hectopascals', 'humidity', 'id', 'istweeted', 'temperature', 'Geiger Counter',
           'Geiger counter + temperatura+umidit', 'charge', 'cpm', 'dose', 'humidity', 'rssi', 'temp', 'geiger',
           'Vegyes kazn....', 'bojler', 'bojlerfut', 'huzatpoz', 'kazan', 'kazanfut', 'kint', 'konyha', 'szamlalo',
           'venti', 'Solar Toy', 'Tests solar charging and soil moisture.', 'batt', 'charge', 'rssi', 'soc', 'soil',
           'state', 'vbatt', 'vcc', 'wtime', 'Fork: RiverRuns Weather station ',
           'analog.io/s30D - RiverRuns weather station test. (Fork of s3894)', 'dust', 'hum', 'press', 'temp',
           'Knype Weather', 'Knypersley Weather', 'barotemp', 'hectopascals', 'humidity', 'tempf', 'weather',
           'Apt Weather', 'An Arduino UNO board that polls a SHT15 and sends a serial string to a RN-131C.', 'Humidity',
           'Temperature', 'sht15', 'RN-131C', 'wifly', 'uno', 'temp', 'humidity', 'Channel 116 a ver ...',
           'ESP8266 arduino', 'hume', 'rocio', 'temp', 'lima', 'peru', 'esp8266', 'Arduino', 'Temperatura', 'humedad',
           'Outdoor light, temp, humidity', 'A TSL2561 and a HTU21D in Longmont', 'humidity', 'lux', 'temperature',
           'humidity', 'light', 'temperature', 'weather']

"""
Provo ad estrarre cluster non nel complesso, ma per ciascun stream
"""

# words_per_stream = []
# for doc in metadati.find({"$and": [{"campi.nome_campo": {"$exists": "true", "$ne": "null"}},
#                                    {"descrizione": {"$exists": "true", "$ne": "null"}},
#                                    {"nome": {"$exists": "true", "$ne": "null"}},
#                                    {"tags": {"$exists": "true", "$ne": "null"}}]},
#                          {"campi.nome_campo": 1, "nome": 1, "descrizione": 1, "tags": 1, "_id": 0}):
#     print doc
#     stream = []
#     stream.append(doc['nome'].encode('utf-8'))
#     stream.append(doc['descrizione'].encode('utf-8'))
#     for nome in doc['campi']:
#         stream.append(nome['nome_campo'].encode('utf-8'))
#
#     for tag in doc['tags']:
#         stream.append(tag.encode('utf-8'))
#
#     words_per_stream.append(stream)
#
# print words_per_stream

words_per_stream = [
    ['Vent Temp', 'A DHT22 situated near an HVAC vent, managed by a Particle Core/Photon', 'vent_temp', 'particle',
     'photon', 'temp'], ['Homestead Temp', 'Temperature at Lake George NY', 'temp', 'unit', 'temp'],
    [' suspicious sensor v2', 'same as  suspicious sensor  but new \xc2\xb5C', 'f_sensor'],
    ['Wetter @5ZZ', 'Temperatur und Luftfeuchte in Hofheim am Taunus (5ZZ QTH)', 'luftfeuchte', 'temp'],
    ['Sensor for Reptile Cage', 'Measuring data in reptile cage', 'humidity', 'temp'],
    ['House TMP102 Test', 'A TMP102 sensor hooked up via an Electric IMP for testing.', 'temp_f', 'temp_f'],
    ['Test', '123', 'humidity', 'idx', 'temp'], ['Diningroom', 'ESP8266 with DHT22', 'humidity', 'temp'],
    ["sam's sensor #1", "sam's sensor #1", 'temp'], ['WallE Weather 2', 'second weather sensor', 'humidity', 'temp'],
    ['Linux Server Performance Monitor (compaq)', 'CPU/Memory Usage', 'Memory Available (mb)', 'CPU Usage (percent)'],
    ['Channel 303', 'tweet control for spark core', 'command'],
    ['Fez Panda II Temperatura', 'Temperature for FEZ Panda II', 'Temperatura em Celsius', 'FEZ Panda II'],
    ['Channel 335', 'Field Label1'], ['This is silly =)', 'Baaah', 'ADC', 'None'],
    ['Weather', 'ThingSpeak Weather Client - How to at http://harrisonpham.com/dp/thingspeakclient', 'humidity',
     'sunlight', 'temperature', 'weather'],
    ['Light Sensor', 'A photocell in my room measuring the ambient light level.', 'Light Level', 'light', 'photocell'],
    ['Fridgly', 'Light, Temperature and Humidity measurements', 'Temperature', 'Humidity', 'Light Level',
     'Netduino Fridge'], ['Heat Transfer', 'Roof', 'Internal'],
    ['Fez Panda II Light Sensor', 'Light Sensor', 'Light Sensor'], ['Channel 378', 'Random Number'],
    ['EdsWeatherDuino', 'arduino with a couple sensors', 'Field Label1'],
    ['mbed Temperature Monitor Test 1', 'A test channel for a temperature monitor using a mbed microcontroller',
     'Temperature', 'Time'],
    ['PSoC Temperature Monitor', 'My new test channel for testing purposes.', 'Temperature', 'Time'],
    ['GPS', 'GPS Sensor', 'Latitude', 'Velocidade', 'Longitude', 'GPS'],
    ['Channel 423', 'VPS disk space', 'Disk Space'], ['Bore Monitor', 'Chestnut Farm Bore Monitor', 'Hours'],
    ['Channel 450', 'Field Label1'], ['Channel 464', 'test', 'Field Label 1'],
    ['Channel 466', 'Boiler monitor', 'Rate', 'BTUs', 'Loop Temp'], ['Home Sensors', 'Temperature', 'Room Temperature'],
    ['PotSpot', 'Value of a potentiometer on my NetDuino Plus', 'Analog 0'],
    ['IRS Refund', 'Please enter your tax refund below.', 'Dollar Amount'], ['Channel 484', 'Rate'],
    ['Channel 489', 'Field Label1'],
    ["John's Hydra Stats", 'Water parameters from Hydra controler', 'Display Tank Temperature', 'Room Temperature',
     'pH', 'reef', 'hydra', 'tank'], ['Test129412', 'Test129412', 'test129412'],
    ['Vibration Sensor', 'Vibration sensor located on a CLEEN ULT Freezer', 'piezo', 'freezers', 'piezo', 'vibration'],
    ['green house', '4 dht22 sensors and 4 home built light sensors', 'cft', 'd1', 'd2', 'd3', 'd4', 'datatime', 'h0',
     'h1', 'h2', 'h3', 'l0', 'l1', 'l2', 'l3', 'st', 't0', 't1', 't2', 't3'],
    ['DHT22', 'DHT22 + ESP8266/NodeMCU', 'humidity', 'temp'],
    ["Lipovetsky's House weather", 'build on esp2866', 'humi', 'temp'],
    ['8 Gallon Nano', 'Controller Temp', 'Hood Temp', 'PH', 'Tank Temp'],
    ['Frozen Poker Money', 'Enter the amount of cash that is frozen in your online poker account.', 'Dollar Amount'],
    ['officeTemp', 'Office temperature @ Wunderman Miami', 'temp'],
    ['Teste Mbed', 'Teste para o Mbed', 'Temperatura', 'Tempo'],
    ['Light Level', 'Netduino Plus Test', 'Light Level', 'netduinoplus'],
    ['Kukulins reef', 'Experimental reef data', 'Light intensity', 'Tank temperature'],
    ['Motion Sensor', 'Motion sensing from webcam', 'Motion', 'Motion'],
    ['Home Control Testing', 'Testing Wiznet Board', 'Testing Temp', 'Homevision Homevisionxl plugin'],
    ['Home - Attic Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire'],
    ['Home - Basement Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire'],
    ['EMD', 'EMD in Machine Room', 'Alarm2', 'Humidity', 'Alarm1', 'Temp'],
    ["Jacob's Bedroom", 'Cal Poly PCV Estrella, 4th floor', 'RSSI', 'Temperature (degC)', 'LQI', 'TI TMP175'],
    ['Channel BOOSTUB', "Mac's Hot Tub Temp and status", 'Field Label1', 'macsboost'],
    ['Anclote Brewery', 'Brewing controller', 'Color', 'Temperature', 'beer', 'more beer', 'sometimes cider'],
    ['Channel 580', 'Test Channel for Thing Speak', 'test2', 'test1', 'testapps'], ['Channel 587', 'Field Label1'],
    ['Ping Rose Time', 'Time to ping Rose from home.', 'time'],
    ['Garage monitor', 'Garage temperature, light and door position', 'door', 'light', 'temperature', 'temperature'],
    ['temp_bug3',
     'my third tempbug: http://www.instructables.com/id/TempBug-internet-connected-thermometer/?ALLSTEPS likely to be used for testing',
     'temp'], ['WTI Frame', 'CL1 and NG1 prices.', 'cl1', 'ng1', 'time'],
    ['Tempbug', 'An NTC thermistor measuring hot water temp', 'temp', 'hotwater', 'thermistor'],
    ['HP_Sensor_AQ_10', 'temperature, humidity indoors', 'r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 't1',
     't2', 't3', 't4', 't5', 't6', 't7', 't8', 't9', 'hp_weather'], ['Test1', 'Test1', 'id', 'rssi', 'temp'],
    ['RPI_CAM_DB01', 'CPU and AIR Temp form RPI', 'air_temp', 'cpu_temp'],
    ['GarageTempBug', 'MJG temp bug', 'signal', 'temp', 'signal', 'temp'],
    ['NTP Variation', 'Variation of NTP time on a Pi', 'offset', 'ntp', 'time'],
    ['Crystal Brook Weather', 'Weather Station located at Crystal Brook, South Australia', 'baromin', 'batt_lvl',
     'dailyrainmm', 'dewptc', 'humidity', 'light_lvl', 'rainmm', 'tempc', 'winddir', 'winddir_avg2m', 'windgustdir',
     'windgustdir_10m', 'windgustkmh', 'windgustkmh_10m', 'windspdkmh_avg2m', 'windspeedkmh', 'brook', 'crystal',
     'weather', 'wimp'],
    ['ioBridge Server', 'ioBridge IO-204 connected to web server to report temperatures to ThingSpeak', 'Server Temp',
     'temperature', 'iobridge'], ["lee's test channel",
                                  '\xce\xb3\xce\xbb\xcf\x8e\xcf\x83\xd1\x81\xd1\x82\xd1\x8b\xd0\xbd\xd0\xbd\xe1\x83\xa7\xe1\x83\x90\xe1\x83\x9d\xe1\x83\xa1 gr\xc3\xa2wen t\xc3\xa4gel\xc3\xaech safd asfd sadf as gsadg asgd asdg sad fsa fasd asdg sdfgas dgas g2',
                                  'Field Label 8', 'Field Label 2', 'Field Label 3', 'utf8 test', 'Field Label 6',
                                  'Field Label 7', 'Field Label 5', 'Field Label 4', 'BMP180', 'Pressure',
                                  'temperature', 'esp8266', 'light'],
    ['my_house', 'Netduino Plus connected to sensors around the house', 'Outside Temperature', 'Light', 'temp', 'light',
     'sensor'],
    ['Arduino Ethernet', 'Ofice Humidity using ioBridge FB-8 Humidity sensor, Arduino Diecimilia, and Ethernet Shield.',
     'Humidity'], ['Interior Temp', 'Degrees F'], ['My Front Room', 'Front Room Temperature', 'Temp'],
    ['Channel 21', 'Arduino ThingSpeak Test', "Btu's", 'HX Out', 'Tank Top', 'HX In', 'Outdoor', 'Gallons Flowed',
     'Collector', 'Tank Bottom'],
    ['Channel Test', 'Temperaturtest Sensor 1', 'Sensor 2', 'Sensor 3', 'Sensor 1', 'Status 4', 'Sensor 1'],
    ['Test channel', 'testing with Arduino Uno', 'Current State'],
    ['Channel 57', 'AguasClaras Weather Station sending Reative Humidity and Temperature', 'Temperatura', 'Humidade'],
    ['Pixance', 'My mouse pixel distance covered in each time lapse, updated with Pixance.', 'Pixel Distance',
     'mouse distance pixel python'],
    ['Lacomb, OR', 'Temperature data for a future weather station', 'DS1820 Temp (F)', 'weather Lacomb Oregon'],
    ['The (Not Very Good) Tweeting Fire Alarm', 'A test channel for connecting an Arduino to Twitter', 'Field Label1',
     'Arduino'],
    ['LEDA USA Environment', 'Office conditions at grand street!', 'Humidity', 'Dewpoint', 'TempC', 'ledartist',
     'testing'], ['my test channel', 'Field Label1'], ['Freezer', 'temp'],
    ['Channel 126', 'Public Channel 1 for Jim Davies.', 'Field Label1', 'Jim', 'Davies'],
    ['Channel 127', 'Public Channel 2 for Jim Davies.', 'Field Label1', 'Jim', 'Davies'], ['Netduino_Test', 'Light'],
    ['Thermometer', 'Wireless outdoor thermometer (Electric Imp, TI TMP102 sensor, 4 x AA Energizer L91).',
     'Temperature', 'temperature', 'outdoor'], ['Channel 152', 'Weather Brest, France', 'Temperature'],
    ['Greenhouse monitor',
     'An Arduino based greenhouse controller sending environment data via xbee to a gateway which posts the data to ThingSpeak',
     'Ambient Light', 'Soil Humidity', 'Temperature', 'Pump (On/Off)', 'Lights (On/Off)', 'sindono.com', 'xbee',
     'environment', 'sensor', 'temperature', 'light', 'humidity'],
    ['Husum', 'Experimental Si7021 sensor setup.', 'Humidity / %', 'Temperature / \xc2\xb0C', 'temperature', 'humidity',
     'Si7021'], ['Temperature', 'Temperature in the Cycle30 office', 'Temperature'],
    ['SWRC Streamgage1', 'Pumphouse Streamgage', 'GageHeight'],
    ['Tap 1', 'Data channel for the Blue Tap', 'Size', 'Type', 'State', 'Rating', 'Description'],
    ['Work Hours', 'Work Ratio', 'pBillable', 'nonBillable', 'wBillable', 'lostTime', 'efficiency', 'possible',
     'downTime'], ['Channel 185', 'IO Bridge Data', 'Not Connected', 'Master', 'Office'], ['Channel 192', 'field1'],
    ['Home - Indoor Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire'],
    ['SWLincoln, Ne Weather', 'Weather Station Readings', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
     'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
     'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph'],
    ['Maint Mez', 'Nitrogen Flow on Maintenance Mezzanine ', 'flow', 'time'],
    ['Rizzo Controls LLC Accelerometer Angle Data ',
     'Accelerometer installed on EZ Stretch Knee Rehab Machine for Compliance Monitoring', 'angle', 'accel', 'controls',
     'rizzo'], ['envsensor2-pi2', 'DHT11 temp/humidity sensor.', 'humidity', 'temp'],
    ['HP_Sensor_AQ_8', 'temperature, humidity sensor indoors', 'local_ip', 'relative_humidity',
     'temperature_in_celsius', 'hp_weather'],
    ['Weather Station in Novara (Italy)', 'A Weather Station in Novara', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf',
     'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
     'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'novara', 'station',
     'weather'],
    ['Skyline Estates Arvada WIMP', 'A complete WIMP', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
     'light_lvl', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph',
     'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'arvada', 'estates', 'skyline', 'weather'],
    ['test weather', 'Testing wimp weather station', 'humidity', 'tempf'],
    ['Blueline Server Closet Temp Sensor', 'Blueline Server Closet Temperature Sensor', 'temp', 'blueline'],
    ['Raspberry Pi Weather',
     'A Raspberry Pi Weather station decoding 433 MHz Sensors\r\n\r\nwww.billy.gr/raspberry-pi-weather-station',
     'dewpoint', 'heatindex', 'humidity', 'temperature', 'raspberrypi', 'weather'], ['Solar Hot Water Temperatures',
                                                                                     'SHWS temperatures at bottom(cold inlet and roof heater feed), middle (roof heater return) and top (tank outlet)',
                                                                                     'bottom', 'middle', 'pump',
                                                                                     'timestamp', 'top', 'shws'],
    ['VBBarn1 Env',
     'A VoltBarn sensor pack, in the downstairs workshop, using a MPL115A1 for barometric pressure, and HTU21D temp/humidity.',
     'humidity', 'pressure', 'temp', 'weather'], ['Arduino', 'temperatura', 'hum', 'temp'],
    ['RACCS Logger', 'RACCS environmental sensor data', 'co2', 'lux', 'o2', 'pvt', 'rh', 'smc1', 'smc12', 'smc2',
     'smc3', 'st1', 'st2', 'st3', 'st4', 'temp'],
    ['Weather Dump', 'Weather information at Cilia.', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
     'light_lvl', 'measurementTime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
     'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'millwood', 'ny', 'sensor', 'weather'],
    ['K&K Weather Station', 'WIMP K&K Weather Station', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity',
     'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m',
     'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather'],
    ['AC Line Frequency Monitor', 'High resolution frequency measurement of AC power line', 'frequency'],
    ['WineTempBug', 'First TemBug', 'signal', 'temp', 'electricimp', 'imp', 'signal', 'temperature'],
    ['Torrey Pines Elementary School Red Box 1',
     'Red box 1 is a moveable waterproof box containing a Photon that is attached to a soil moisture sensor, a soil temperature sensor and an SI1145 UV, infrared, and visible light sensor. The box uses a LiPo battery and the SparkFun battery shield and has a waterproof USB connector for charging the battery as well as a waterproof on/off button.',
     'batterypercent', 'infraredvalue', 'soilmoistpercent', 'soilmoistvalue', 'stempc', 'stempf', 'uvindex',
     'visiblevalue', 'moisture', 'soil', 'temperature', 'uv'],
    ['Sous Vide', 'Sous Vide PID temperature controller', 'd', 'heaterstate', 'i', 'p', 'settemperature',
     'temperature'], ['Tempel Weather', 'temperature and humidity data from the photon', 'humidity', 'tempf'],
    ['Node WiFi Weather DHT11', 'Nodemcu esp8266 dht11', 'hidx', 'hidx2', 'hum', 'hum2', 'temp', 'temp2'],
    ['Char Lab1', 'Nitrogen monitor', 'flow', 'time'],
    ['WMP11 temperature + humidity', 'ESP8266 AM2302', 'humidity', 'temp', 'humidity', 'temp'],
    ['ESP8266 monitors', 'ESP8266 monitors streaming temperature information', 'id', 'millis', 'temp', 'dht11',
     'ds18b20', 'esp8266', 'temperature'],
    ['UAM - AZC / Hornos 1 + 2', 'Monitoreo de condiciones de los experimentos', 'hidx1', 'hidx2', 'hum1', 'hum2',
     'temp1', 'temp2', 'dht22'], ['30 Sensors logging', 'PPJ testing', 'shelves', 'time'],
    ['LightSensor', 'Light sensor basic setup', 'humidity', 'light', 'temperature', 'light'],
    ['Incubator_1', 'Temperature sensos - PT100\r\nA/D - ADS1247', 'temp', 'incubator'],
    ['Balancer-Home-Gas-MQ-2', 'MQ-2 Gas sensor level', 'gas', 'gas'],
    ['Pickem Motion Sensor', 'Motion sensor trial living room', 'id', 'motion', 'time'],
    ['Home Energy Monitor at 140 Ly Thai To Hoi An Viet Nam',
     'A Energy usage at 140 Ly Thai To Hoi An use Arduno and Esp8266', 'ch01', 'ch02', 'ch03', 'ch04', 'ch05', 'ch06',
     'ch07', 'ch08', 'ch09', 'ch10', 'hoian', 'iot', 'solarpower', 'weather'],
    ['Pokoj', 'Radek Pokoj', 'hidx', 'hum', 'temp', 'teplota'], ['The Big Freeze',
                                                                 'Arduino based TI102 temperature sensor monitor and display. \r\nSensor is waterproofed and  embedded in a freezer.  Degrees in Fahrenheit. See the trend:\r\nhttp://bit.ly/1XxiO6C\r\n',
                                                                 'LinkMargin', 'MaxTemp', 'MinTemp', 'Temp', 'maxtemp',
                                                                 'temp'],
    ['Channel 201', 'New channel', 'RH2', 'V0-V1', 'RH1'], ['Digital Step Demo', 'V'],
    ['test-wm1 (0x1c23)', 'WM #1 (sensor 0x1c23)', 'rh', 'pre', 'temp1', 'carga', 'temp2'],
    ["Roy's Hot Water System Controller", 'Collector Inlet', 'Collector Outlet', 'Ambient Air', 'Tank Storage', 'Flow',
     'Tank Return', 'Collector Return'], ['Office Temp', 'Temperature at my desk', 'temp1'],
    ['Home - Outdoor Temp', 'Temperature readings from Arduino 1-Wire network.', 'Temperature ', 'Arduino', '1-Wire'],
    ['Attic', 'Left Side Attic Temp.', 'Degrees Fahrenheit'], ['Outside', 'Degrees Fahrenheit'],
    ['Basement', 'Server Closet Temp', 'Degrees Fahrenheit'],
    ['CEIT Rooms', 'Logs of room temperatures for 78-{416,417,418,420} - part of the current CEIT facility.', '78-417',
     'arduino MSP430 pubsub temperature air-conditioning'], ['Gamma POSTr', 'Test Field'],
    ['LDR LUX  Miklos', 'Teste com arduino ethernet shield e LDR', 'LUX'],
    ['IRS Refund TEST CHANNEL', 'Please enter your IRS refund.', 'Dollar amount of refund'],
    ['myChannel', 'test', 'field 1'],
    ['Water Bed', 'Master Bedroom Water Bed', 'Waterbed temp', 'Bedroom temp', 'water bed temperature controller'],
    ['IRS Refund Status Test', 'Please enter your IRS refund below.', 'Dollar Amount'],
    ['StoneIT', 'teste da aplica', 'stonetype', 'finish', 'serialnum'], ['Temperature', 'Temperature', 'field1'],
    ['Consumption', 'Light sensor attached to the electricity, gas and water meters.', 'gas', 'power', 'water',
     'consumption', 'electricity', 'gas', 'meter', 'water'],
    ['MAN Weatherstation', 'MAN Weather Station dtat stream, from WIMP weatherstation project', 'baromin', 'batt_lvl',
     'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'solarradiation', 'tempf',
     'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m',
     'windspeedmph', 'nz', 'weatherstation'],
    ['Temperature Sensors', 'A couple of DS1820 sensors connected togheter', 'alarm', 'temperature1', 'temperature2',
     'temperature3', 'temperature4', 'temperature5', 'temperature6', 'temperature'],
    ['heatcraft temp/humidity', 'test run of cellular shield', 'humidity', 'temperature', 'heatcraft', 'humidity',
     'temperature'], ['TV Room', 'ESP8266 with DHT22', 'humidity', 'temp'],
    ['Woolston Fluxgate Magnetometer', 'FGM-3h', 'nt', 'time'],
    ['Antigonish Weather', 'Wimp Weather Station located in Nova Scotia, Canada', 'baromin', 'batt_lvl', 'dailyrainin',
     'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir',
     'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'antigonish', 'weather'],
    ['Omega Pings', 'Capturing pings from an Onion Omega to determine a reasonable range to monitor', 'time', 'ping'],
    ['Grijanje', 'Mikele', 't1', 't2', 't3', 't4', 't5', 't6', 'tr', 'tv'],
    ['Wanniassa [Admiral] weather', 'A weather station in Wanniassa, ACT, Australia', 'baromin', 'batt_lvl',
     'dailyrainin', 'dewptf', 'humidity', 'light_lvl', 'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m',
     'windgustdir', 'windgustdir_10m', 'windgustmph', 'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather'],
    ['Tank temperatures',
     "5 Dallas DS18B20 ic's measuring the temperature of my hot water cylinder. Placed equally from top to bottom. 0 at bottom, 4 at top. Heated by gas boiler twice a day and also through solar panels if the weather is good enough!\r\n\r\n##Testing at the moment##",
     'temp0', 'temp1', 'temp2', 'temp3', 'temp4', 'tank', 'temperature', 'water'], ['Laundry Room Climate',
                                                                                    'A DHT11, and photo resistor on an ESP-8266 located on the first floor in the laundry room.',
                                                                                    'humidity', 'light', 'temperature',
                                                                                    'climate'], ['NightLight',
                                                                                                 'Smart LED stripe controller\r\nSee https://github.com/smartynov/iotfun/tree/master/nodemcu/nightlight for details',
                                                                                                 'colortemp',
                                                                                                 'illuminance',
                                                                                                 'lastmotion',
                                                                                                 'maxpower', 'state',
                                                                                                 'temperature', 'home',
                                                                                                 'iot', 'led', 'light',
                                                                                                 'sensor', 'smart'],
    ['Tampere Weather', 'Weather at east part of Tampere', 'Humidity percentage', 'Pressure in hPa',
     'Temperature in Celcius', 'Light (0-1024)'], ['Light, Temperature, Voltage',
                                                   'Light, Temperature of my private office + the voltage of the battery powering up my arduino that feeds the data via the ethernet shield',
                                                   'Light_Level', 'Voltage', 'Temperature', 'Ah', 'Wh', 'Battery',
                                                   'Ampere'],
    ['Studio Colours', 'The colours in my studio', 'Colour 8', 'Colour 2', 'Colour 3', 'Colour 1', 'Colour 6',
     'Colour 7', 'Colour 5', 'Colour 4', 'colour color'],
    ['Data Graphs', 'KDB Temp (F)', 'KD Temp (F)', 'MD Temp (F)', 'KA Temp (F)', 'LW Temp (F)', 'KTB Temp (F)',
     'PRD Temp (F)', 'DD Temp (F)'], ['San Diego Geiger Counter / Background Radiation Monitor',
                                      'The Geiger Counter updates every few minutes with counts-per-minute (CPM) and microsieverts. \r\nThis is an Unofficial/Non-Government feed and may go offline occasionally for maintenance.\r\nMore details: \r\nhttp://ibtek.wordpress.com/\r\n\r\n',
                                      'Radiation uSv', 'Radiation Clicks-Per-Minute', 'Arduino', 'Geiger Counter',
                                      'SBM-20', 'Ehtershield'],
    ['Raspberry Pi Monitor', 'Monitor the performance of a Raspberry Pi', 'Load', 'Processes', 'Temperature',
     'Free pendrive FS (MB)', 'Free root FS (MB)', 'Free RAM (MB)', 'raspberry pi raspberrypi monitor status'],
    ['RoboBench', 'Control a robotic arm through the web. See what it does in real time through a Live Video Stream.',
     'Arm Elbow 1', 'Arm Elbow 2', 'Base Rotation', 'LED', 'The Claw', 'Arm Elbow3'], ['Crayfish Aquarium',
                                                                                       'Information of crayfish aquarium.\r\nwater temperature. CDS Level. State of the Cooling system(Peltier).\r\nCooling system to operate the water temperature reaches 28 degrees or more\r\n',
                                                                                       'FAN', 'CdS', 'Temp.[C]',
                                                                                       '\xe3\x83\x87\xe3\x83\x90\xe3\x82\xa4\xe3\x82\xb9\xe6\xad\xbb\xe6\xb4\xbb',
                                                                                       'Arduino', 'Thermo module',
                                                                                       'Peltier', '103AT'],
    ["TeraHz's 40 breeder reef", 'Stats from my Hydra Controller\r\nhttp://www.hydra-reef.com/wiki/ThingSpeak',
     'Room Temperature', 'DT Temperature', 'Ph', 'LED Temperature', 'MDF Temperature'],
    ['Garden Sensors', 'Active data from various sensors in my garden.', 'Temperature (C)', 'Light Frequency',
     'Temperature (F)', 'Irradiance', 'Lux'],
    ['New Jersey Autoclave Data Stream', 'A stream of autoclave data.', 'a_pressure', 'a_temperature', 'a_v1', 'a_v2',
     'cycle_id', 'd_counter', 'd_cycle', 'd_dwell', 'd_fault', 'd_heater', 'd_process', 'pulse_electric',
     'pulse_water'],
    ['EW1617 Data', 'EW1617 weather data from Mt. Tabor, Portland, Oregon.', 'dailyrain', 'date', 'dewpoint',
     'hourrain', 'humidity', 'pressure', 'temp', 'time', 'winddir', 'winddiravg', 'windgust', 'windgustdir',
     'windspeed', 'windspeedavg', 'portland', 'weather'],
    ['JJ WIMP', 'Sparkfun Weather Station ', 'baromin', 'batt_lvl', 'dailyrainin', 'dewptf', 'humidity', 'light_lvl',
     'measurementtime', 'rainin', 'tempf', 'winddir', 'winddir_avg2m', 'windgustdir', 'windgustdir_10m', 'windgustmph',
     'windgustmph_10m', 'windspdmph_avg2m', 'windspeedmph', 'weather'],
    ['pooltemp', 'pool Temp and current weater around pool', 'humidity', 'outdoorc', 'poolc', 'poolf', 'weather'],
    ['Solar System Power Status', 'Shows the voltage and current input/output of a solar powered weather station',
     'current1', 'current2', 'voltage1', 'voltage2'],
    ['\xd0\x92\xd0\xb5\xd1\x81\xd0\xb5\xd0\xbb\xd0\xba\xd0\xbe\xd0\xb2\xd0\xb0 \xd0\xa5\xd0\xb0\xd1\x82\xd0\xb0',
     '\xd0\x9f\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xba\xd1\x96\xd0\xb9', 'hi', 'rh', 't', 'vcc',
     'dht11', 'esp01', 'esp8266'], ['Amurrio weather | Amurrio eguraldia',
                                    'Data from DS18B20 temperature sensor and HH10D humidity sensor located at Amurrio. Visualize this data on Google Charts: http://cvzcaoio.appspot.com. My twitter: http://twitter.com/ocasquero',
                                    'humidity', 'temp', 'amurrio', 'arduino_pro_mini', 'arduino_yun', 'ds18b20',
                                    'eguraldia', 'hh10d', 'humidity', 'temperature', 'weather', 'xbee'],
    ["Brian's Hydra Info", 'Aquarium Controller Data', 'BL LED Level', 'Tank', 'Room', 'PH', 'NW LED Level',
     'RB LED Level', 'CW LED Level', 'Hood'],
    ['Innovactive Channel 1', 'Canale di test', 'Button 3', 'Luminosit', 'Slider 1', 'Temperatura', 'Button 1',
     'Button 2', 'Slider 3', 'Slider 2', 'innovactive test'],
    ['Straat-o-meter', 'Sensoring data in an agriculture environment. ', 'Luchtvochtigheid', 'Lichtintensiteit',
     'Temperatuur', 'Test CPU meter'],
    ['Home Control Temps', 'Home Control Temperatures', 'Bedroom Temperature', 'Kitchen Temp', 'Outside Temp',
     'Garage Temp', '3M-50 Temperature', 'Home Control Curent', '3M-50 Setpoint', 'Freezer Temp'],
    ['Aggie', 'Output 4 (A)', 'Output 2 (V)', 'Output 3 (V)', 'Output 1 (V)', 'Output 2 (A)', 'Output 3 (A)',
     'Output 1 (A)', 'Output 4 (V)'],
    ['Weather Station (ACM5002)', 'Selection of Weather station data collected from a WH2081 by an OpenGear ACM5002',
     'Outdoor Humidity (%)', 'Pressure (hPa)', 'Wind Direction', 'Rain (mm)', 'Outdoor Temp (', 'Indoor Temp (',
     'Wind Speed (m/s)', 'Wind Gust (m/s)'],
    ['Channel 557', 'Pool Temp', 'OUTSIDE', 'battVoltage', 'POOL', 'loopCounter', 'code execution time till now',
     'wiFiConnTime'],
    ['iwsnqq', 'hello world', 'Field Label 8', 'Field Label 2', 'Field Label 3', 'Field Label1', 'Field Label 6',
     'Field Label 7', 'Field Label 5', 'Field Label 4', 'sunshine', 'light'],
    ['Study', 'Shows some sensor info from a RaspberryPi running in my study at home (Sydney, NSW)\r\n\r\n',
     'Sip Channels', 'Battery Voltage (V)', 'Light Level', 'Temperature', 'Temperature (BMP180)', 'Pressure',
     'Humidity', 'CPU Temperature', 'weather\r\n'], ['bug2: cottage bathroom temp (1min data)',
                                                     'my second tempbug:\r\nhttp://www.instructables.com/id/TempBug-internet-connected-thermometer/?ALLSTEPS\r\n\r\nlikely to be used to measure indoor temperature at the brevard house',
                                                     'temp'],
    ['56R Data', 'BME280 chip collecting Temp/Barometric pressure.', 'address', 'captured', 'degrees', 'hectopascals',
     'humidity', 'id', 'istweeted', 'temperature'],
    ['Geiger Counter', 'Geiger counter + temperatura+umidit\xc3\xa0', 'charge', 'cpm', 'dose', 'humidity', 'rssi',
     'temp', 'geiger'],
    ['Kaz\xc3\xa1n vez\xc3\xa9rl\xc5\x91', 'Vegyes kaz\xc3\xa1n....', 'bojler', 'bojlerfut', 'huzatpoz', 'kazan',
     'kazanfut', 'kint', 'konyha', 'szamlalo', 'venti'],
    ['Solar Toy', 'Tests solar charging and soil moisture.', 'batt', 'charge', 'rssi', 'soc', 'soil', 'state', 'vbatt',
     'vcc', 'wtime'],
    ['Fork: RiverRuns Weather station ', 'analog.io/s30D - RiverRuns weather station test.\r\n(Fork of s3894)', 'dust',
     'hum', 'press', 'temp'],
    ['Knype Weather', 'Knypersley Weather', 'barotemp', 'hectopascals', 'humidity', 'tempf', 'weather'],
    ['Apt Weather', 'An Arduino UNO board that polls a SHT15 and sends a serial string to a RN-131C.', 'Humidity',
     'Temperature', 'sht15', 'RN-131C', 'wifly', 'uno', 'temp', 'humidity'],
    ['Channel 116 a ver ...', 'ESP8266 arduino', 'hume', 'rocio', 'temp', 'lima', 'peru', 'esp8266', 'Arduino',
     'Temperatura', 'humedad'],
    ['Outdoor light, temp, humidity', 'A TSL2561 and a HTU21D in Longmont', 'humidity', 'lux', 'temperature',
     'humidity', 'light', 'temperature', 'weather']]
